[{"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\reportWebVitals.ts":"1","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\index.tsx":"2","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\reducers.tsx":"3","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\postprocessing\\constant.ts":"4","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\postprocessing\\pass.ts":"5","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\index.tsx":"6","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\main\\App.tsx":"7","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\internationalization\\i18n.ts":"8","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\scene\\Scene.tsx":"9","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\hooks\\useMousePosition.tsx":"10","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\components\\Effects.tsx":"11","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\scene\\SceneController.tsx":"12","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\contact\\Contact.tsx":"13","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\projects\\Projects.tsx":"14","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\education\\Education.tsx":"15","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\navigation\\Navbar.tsx":"16","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Home.tsx":"17","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\components\\Loader.tsx":"18","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\components\\functions.ts":"19","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\projects\\Project.tsx":"20","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Globe.tsx":"21","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Texts.tsx":"22","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Photo.tsx":"23","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Objects.tsx":"24"},{"size":440,"mtime":1614182950498,"results":"25","hashOfConfig":"26"},{"size":1085,"mtime":1625681721538,"results":"27","hashOfConfig":"26"},{"size":931,"mtime":1625681752763,"results":"28","hashOfConfig":"26"},{"size":143,"mtime":1625666555056,"results":"29","hashOfConfig":"26"},{"size":2161,"mtime":1625670862307,"results":"30","hashOfConfig":"26"},{"size":1199,"mtime":1626183085368,"results":"31","hashOfConfig":"26"},{"size":2614,"mtime":1626193399885,"results":"32","hashOfConfig":"26"},{"size":837,"mtime":1626182987337,"results":"33","hashOfConfig":"26"},{"size":2855,"mtime":1626183248039,"results":"34","hashOfConfig":"26"},{"size":763,"mtime":1626182523356,"results":"35","hashOfConfig":"26"},{"size":2397,"mtime":1626183475032,"results":"36","hashOfConfig":"26"},{"size":1609,"mtime":1626183452494,"results":"37","hashOfConfig":"26"},{"size":4162,"mtime":1626183575147,"results":"38","hashOfConfig":"26"},{"size":3681,"mtime":1626355245651,"results":"39","hashOfConfig":"26"},{"size":3306,"mtime":1626183273803,"results":"40","hashOfConfig":"26"},{"size":5050,"mtime":1626183589713,"results":"41","hashOfConfig":"26"},{"size":1161,"mtime":1626355952159,"results":"42","hashOfConfig":"26"},{"size":513,"mtime":1626185099424,"results":"43","hashOfConfig":"26"},{"size":1782,"mtime":1626182797362,"results":"44","hashOfConfig":"26"},{"size":10547,"mtime":1626355211417,"results":"45","hashOfConfig":"26"},{"size":2394,"mtime":1626355855905,"results":"46","hashOfConfig":"26"},{"size":2040,"mtime":1626355727619,"results":"47","hashOfConfig":"26"},{"size":4077,"mtime":1626355458173,"results":"48","hashOfConfig":"26"},{"size":1383,"mtime":1626355606679,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"g7aof9",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\reportWebVitals.ts",[],["107","108"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\index.tsx",["109"],"import { GUI } from 'dat.gui';\r\nimport * as dat from 'dat.gui';\r\nimport React, { createContext, Dispatch, useReducer } from 'react';\r\nimport { Camera } from 'three';\r\nimport { sceneReducer, SceneActions } from './reducers';\r\n\r\nexport type SceneType = {\r\n    currentItem: string;\r\n    fullScreen: boolean;\r\n    gui: GUI;\r\n}\r\n\r\ntype InitialStateType = {\r\n    scene: SceneType;\r\n}\r\n\r\nconst initialState = {\r\n    scene: { currentItem: 'home.end', fullScreen: false, gui: new dat.GUI() }\r\n}\r\n\r\nconst AppContext = createContext<{\r\n    state: InitialStateType;\r\n    dispatch: Dispatch<SceneActions>;\r\n}>({\r\n    state: initialState,\r\n    dispatch: () => null\r\n});\r\n\r\nconst mainReducer = ({ scene }: InitialStateType, action: SceneActions) => ({\r\n    scene: sceneReducer(scene, action),\r\n});\r\n\r\nconst AppProvider: React.FC = ({ children }) => {\r\n    const [state, dispatch] = useReducer(mainReducer, initialState);\r\n\r\n    return (\r\n        <AppContext.Provider value={{ state, dispatch }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nexport { AppContext, AppProvider };","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\reducers.tsx",["110"],"import { Camera } from \"three\";\r\nimport { SceneType } from \"./index\";\r\n\r\ntype ActionMap<M extends { [index: string]: any }> = {\r\n    [Key in keyof M]: M[Key] extends undefined\r\n    ? {\r\n        type: Key;\r\n    }\r\n    : {\r\n        type: Key;\r\n        payload: M[Key];\r\n    }\r\n};\r\n\r\nexport enum Types {\r\n    SetCurrentItem = 'SET_CURRENT_ELEMENT',\r\n    SetFullScreen = 'SET_FULL_SCREEN'\r\n}\r\n\r\ntype ScenePayload = {\r\n    [Types.SetCurrentItem]: string;\r\n    [Types.SetFullScreen]: boolean;\r\n}\r\n\r\nexport type SceneActions = ActionMap<ScenePayload>[keyof ActionMap<ScenePayload>];\r\n\r\nexport const sceneReducer = (state: SceneType, action: SceneActions) => {\r\n    switch (action.type) {\r\n        case Types.SetCurrentItem:\r\n            return { ...state, currentItem: action.payload };\r\n        case Types.SetFullScreen:\r\n            return { ...state, fullScreen: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\postprocessing\\constant.ts",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\postprocessing\\pass.ts",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\index.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\main\\App.tsx",["111","112","113","114","115"],"import React, { useContext, useMemo, useRef } from 'react';\r\nimport '../styles/app.css';\r\nimport { AppContext } from '../context';\r\nimport { Types } from '../context/reducers';\r\nimport { Canvas, useFrame } from 'react-three-fiber';\r\nimport Navbar from '../navigation/Navbar';\r\nimport Scene from '../scene/Scene';\r\nimport { Stats, useContextBridge } from '@react-three/drei';\r\nimport useMousePosition from '../hooks/useMousePosition';\r\nimport Effects from '../components/Effects';\r\nimport { ACESFilmicToneMapping, ReinhardToneMapping } from 'three';\r\n\r\nconst Particles = (): JSX.Element => {\r\n  const particles = useRef(null);\r\n  const { x, y } = useMousePosition('2D');\r\n  const [coords] = useMemo(() => {\r\n    const particlesCnt: number = 5000;\r\n    const posArray = new Float32Array(particlesCnt * 3);\r\n    for (let i = 0; i < particlesCnt * 3; i++) {\r\n      posArray[i] = (Math.random() - 0.5) * 100;\r\n    }\r\n    return [posArray]\r\n  }, [])\r\n\r\n  useFrame((state) => {\r\n    if (particles.current) {\r\n      particles.current.rotation.y = -0.1 * state.clock.getElapsedTime();\r\n      if (x > 0) {\r\n        particles.current.rotation.x = -y * (state.clock.getElapsedTime() * 0.000001);\r\n        particles.current.rotation.y = x * (state.clock.getElapsedTime() * 0.000001);\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <points ref={particles}>\r\n        <bufferGeometry>\r\n          <bufferAttribute\r\n            attachObject={[\"attributes\", \"position\"]}\r\n            count={coords.length / 3}\r\n            array={coords}\r\n            itemSize={3}\r\n          />\r\n        </bufferGeometry>\r\n        <pointsMaterial\r\n          sizeAttenuation\r\n          attach=\"material\"\r\n          color='#fff'\r\n          opacity={0}\r\n          size={0.005}\r\n        />\r\n      </points>\r\n    </>\r\n  )\r\n}\r\n\r\nconst App = (): JSX.Element => {\r\n  const { dispatch } = useContext(AppContext);\r\n  const ContextBridge = useContextBridge(AppContext);\r\n\r\n  return (\r\n    <>\r\n      <Canvas\r\n        gl={{ antialias: true }}\r\n        pixelRatio={window.devicePixelRatio}\r\n        colorManagement={false}\r\n        shadowMap\r\n        style={{ width: '100vw', height: '100vh' }}\r\n        onCreated={({ camera, gl, raycaster }) => {\r\n          // camera.position.set(15, 0, -15);\r\n          raycaster.layers.enableAll();\r\n          gl.toneMapping = ACESFilmicToneMapping;\r\n          gl.toneMappingExposure = 1;\r\n        }}\r\n      >\r\n        <ContextBridge>\r\n          <Scene />\r\n        </ContextBridge>\r\n        {/* <Particles /> */}\r\n        <Effects />\r\n      </Canvas>\r\n      <Stats showPanel={0} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\internationalization\\i18n.ts",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\scene\\Scene.tsx",["116","117"],"import React, { useEffect } from 'react';\r\nimport Home from '../home/Home';\r\nimport Education from '../education/Education';\r\nimport Projects from '../projects/Projects';\r\nimport Contact from '../contact/Contact';\r\nimport SceneController from './SceneController';\r\nimport { OrbitControls } from '@react-three/drei/core/OrbitControls';\r\nimport { useRef } from 'react';\r\nimport { useFrame, useThree } from 'react-three-fiber';\r\nimport Navbar from '../navigation/Navbar';\r\n\r\n// const Skybox = React.memo(() => {\r\n//     console.log('skybox rendered');\r\n//     const textures: Array<string> = [\r\n//         'images/textures/skybox/space_ft.png',\r\n//         'images/textures/skybox/space_bk.png',\r\n//         'images/textures/skybox/space_up.png',\r\n//         'images/textures/skybox/space_dn.png',\r\n//         'images/textures/skybox/space_rt.png',\r\n//         'images/textures/skybox/space_lf.png'\r\n//     ];\r\n\r\n//     return <mesh>\r\n//         <boxBufferGeometry args={[1000, 1000, 1000]} />\r\n//         {\r\n//             textures.map((value: string, i: number) => {\r\n//                 const texture = new TextureLoader().load(value);\r\n//                 console.log(texture);\r\n//                 return <meshBasicMaterial key={i} attachArray='material' map={texture} side={BackSide} />;\r\n//             })\r\n//         }\r\n//     </mesh>\r\n// })\r\n\r\nconst navbar_items: Array<NavbarItem> = [\r\n    { id: 0, name: 'education' },\r\n    { id: 1, name: 'projects' },\r\n    { id: 2, name: 'contact' },\r\n]\r\n\r\nexport interface NavbarItem {\r\n    id: number,\r\n    name: string,\r\n}\r\n\r\nconst Scene = (): JSX.Element => {\r\n    console.log('scene rendered');\r\n    const light = useRef(null);\r\n    const { camera } = useThree();\r\n\r\n    useEffect(() => {\r\n        if (light.current) {\r\n            light.current.position.set(\r\n                camera.position.x + 10,\r\n                camera.position.y + 10,\r\n                camera.position.z + 10\r\n            )\r\n            console.log(light.current.position)\r\n        }\r\n    }, [camera.position])\r\n\r\n    return (\r\n        <>\r\n            <Navbar items={navbar_items} />\r\n            <Home />\r\n            <Education />\r\n            <Projects />\r\n            <Contact />\r\n            {/* <directionalLight position={[0, 1, 1]} intensity={1} color={'#fff'} /> */}\r\n            <hemisphereLight args={['#fff', '#d4af37', 4]} />\r\n            <spotLight\r\n                ref={light}\r\n                args={['#fff', 2]}\r\n                castShadow={true}\r\n                shadow-bias={-0.0001}\r\n                shadow-mapSize-width={1024 * 4}\r\n                shadow-mapSize-height={1024 * 4}\r\n            />\r\n            <SceneController />\r\n            {/* <Suspense fallback={null}>\r\n                <Skybox />\r\n            </Suspense> */}\r\n            {/* <OrbitControls /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Scene;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\hooks\\useMousePosition.tsx",["118"],"import { useState, useEffect } from 'react';\r\n\r\nconst useMousePosition = (world: string) => {\r\n    const [mousePosition, setMousePosition] = useState<{ x: number, y: number }>({ x: null, y: null });\r\n\r\n    const updateMousePosition = ev => {\r\n        setMousePosition(\r\n            {\r\n                x: world === '2D' ? ev.clientX : (ev.clientX / window.innerWidth) * 2 - 1,\r\n                y: world === '2D' ? ev.clientY : -(ev.clientY / window.innerWidth) * 2 + 1\r\n            }\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('mousemove', updateMousePosition);\r\n\r\n        return () => window.removeEventListener('mousemove', updateMousePosition);\r\n    }, []);\r\n\r\n    return mousePosition;\r\n};\r\n\r\nexport default useMousePosition;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\components\\Effects.tsx",["119","120","121","122","123","124","125","126","127"],"import React, { useRef, useMemo, useEffect, useState } from 'react'\r\nimport { useThree, useFrame } from 'react-three-fiber'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\r\nimport { Vector2 } from 'three/src/math/Vector2'\r\nimport {\r\n    DEFAULT_LAYER_NUM,\r\n    BLOOM_LAYER_NUM,\r\n    FILM_LAYER_NUM,\r\n    MULTIPASS_LAYER_NUM\r\n} from \"../postprocessing/constant\";\r\nimport { createRenderPass, bloomPass, filmPass, createFinalPass } from \"../postprocessing/pass\";\r\n\r\nconst Effects = (): JSX.Element => {\r\n    const { scene, gl, size, camera } = useThree()\r\n    const [bloomComposer, setBloomComposer] = useState<EffectComposer>(null);\r\n    const [finalComposer, setFinalComposer] = useState<EffectComposer>(null);\r\n\r\n    useMemo(() => {\r\n        const renderPass = createRenderPass(scene, camera);\r\n\r\n        // setup bloom composer\r\n        const bloomComposer = new EffectComposer(gl);\r\n        bloomComposer.renderToScreen = false;\r\n        bloomComposer.addPass(renderPass);\r\n        bloomComposer.addPass(bloomPass);\r\n\r\n        // setup film composer\r\n        // const filmComposer = new EffectComposer(gl);\r\n        // filmComposer.renderToScreen = false;\r\n        // filmComposer.addPass(renderPass);\r\n        // filmComposer.addPass(filmPass);\r\n\r\n        // setup composer with multiple passes\r\n        // const multipassComposer = new EffectComposer(gl);\r\n        // multipassComposer.renderToScreen = false;\r\n        // multipassComposer.addPass(renderPass);\r\n        // multipassComposer.addPass(bloomPass);\r\n        // multipassComposer.addPass(filmPass);\r\n\r\n        // setup final composer\r\n        const finalComposer = new EffectComposer(gl);\r\n        finalComposer.addPass(renderPass);\r\n        const finalPass = createFinalPass(\r\n            bloomComposer,\r\n            // filmComposer,\r\n            // multipassComposer\r\n        );\r\n        finalComposer.addPass(finalPass);\r\n\r\n        gl.autoClear = false;\r\n\r\n        setBloomComposer(bloomComposer);\r\n        setFinalComposer(finalComposer);\r\n    }, [])\r\n\r\n    useFrame(() => {\r\n        gl.clear();\r\n\r\n        camera.layers.set(BLOOM_LAYER_NUM);\r\n        bloomComposer.swapBuffers();\r\n        bloomComposer.render();\r\n\r\n        camera.layers.set(DEFAULT_LAYER_NUM);\r\n        finalComposer.swapBuffers();\r\n        finalComposer.render();\r\n    })\r\n\r\n    return null;\r\n}\r\n\r\nexport default Effects;\r\n","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\scene\\SceneController.tsx",["128"],"import { useContext, useEffect } from 'react';\r\nimport { AppContext } from '../context';\r\nimport gsap from 'gsap';\r\nimport { Types } from '../context/reducers';\r\nimport { useThree } from 'react-three-fiber';\r\n\r\nconst SceneController = (): JSX.Element => {\r\n    const { state, dispatch } = useContext(AppContext);\r\n    const { camera } = useThree();\r\n    const { currentItem } = state.scene;\r\n\r\n    const onNavigationEnded = (name: string) => {\r\n        dispatch({\r\n            type: Types.SetCurrentItem,\r\n            payload: name,\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        switch (currentItem) {\r\n            case 'home.to':\r\n                camera && gsap.to(camera.position, { x: 0, y: 0, z: 5, duration: 3, ease: 'expo.out', onComplete: () => onNavigationEnded('home.end') });\r\n                break;\r\n            case 'education.to':\r\n                camera && gsap.to(camera.position, { x: 0, y: 0, z: -15, duration: 3, ease: 'expo.out', onComplete: () => onNavigationEnded('education.end') });\r\n                break;\r\n            case 'projects.to':\r\n                camera && gsap.to(camera.position, { x: 15, y: 0, z: -15, duration: 3, ease: 'expo.out', onComplete: () => onNavigationEnded('projects.end') });\r\n                break;\r\n            case 'contact.to':\r\n                camera && gsap.to(camera.position, { x: 15, y: 0, z: 5, duration: 3, ease: 'expo.out', onComplete: () => onNavigationEnded('contact.end') });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [currentItem])\r\n\r\n    return null;\r\n}\r\n\r\nexport default SceneController;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\contact\\Contact.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\projects\\Projects.tsx",["129"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\education\\Education.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\navigation\\Navbar.tsx",["130","131","132","133"],"import { Fragment, memo, Suspense, useContext, useEffect, useState } from 'react';\r\nimport '../styles/navbar.css';\r\nimport { NavbarItem } from '../scene/Scene';\r\nimport { AppContext } from '../context';\r\nimport { Types } from '../context/reducers';\r\nimport { Html, Text } from '@react-three/drei';\r\nimport { MeshStandardMaterial, Shader, TextureLoader, WebGLRenderer } from 'three';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useLoader, useThree } from 'react-three-fiber';\r\nimport Loader from '../components/Loader';\r\n\r\ninterface NavProps {\r\n    items: Array<NavbarItem>\r\n}\r\n\r\ninterface LanguageItem {\r\n    imageSrc: string,\r\n    name?: string,\r\n    position?: number,\r\n    onClick?: (element: string) => void,\r\n}\r\n\r\ninterface ItemProps {\r\n    name: string,\r\n    position: number,\r\n    onClick: (element: string) => void,\r\n}\r\n\r\nconst Item = ({ name, position, onClick }: ItemProps): JSX.Element => {\r\n    const [color, setColor] = useState<string>('#fff');\r\n\r\n    return (\r\n        <Text\r\n            position-x={position}\r\n            material-depthTest={false}\r\n            // onBeforeRender={(renderer) => renderer.clearDepth()}\r\n            onClick={() => onClick(name)}\r\n            onPointerOver={() => setColor('#d4af37')}\r\n            onPointerOut={() => setColor('#fff')}\r\n            color={color}\r\n            font='fonts/Oswald.ttf'\r\n            fontSize={0.4}\r\n            layers={[1]}\r\n        >\r\n            {name}\r\n        </Text>\r\n    )\r\n}\r\n\r\nconst Language = ({ imageSrc, name, position, onClick }: LanguageItem) => {\r\n    const texture = useLoader(TextureLoader, imageSrc);\r\n\r\n    return (\r\n        <mesh position-x={position} onClick={() => onClick(name)}>\r\n            <planeBufferGeometry attach='geometry' args={[0.6, 0.6]} />\r\n            <meshBasicMaterial\r\n                attach='material'\r\n                map={texture}\r\n                depthTest={false}\r\n                transparent\r\n            />\r\n        </mesh>\r\n    )\r\n}\r\n\r\nconst Navbar = memo(({ items }: NavProps) => {\r\n    console.log('navbar rendered');\r\n    const { state, dispatch } = useContext(AppContext);\r\n    const { currentItem, fullScreen } = state.scene;\r\n    const [languages] = useState<Array<LanguageItem>>([\r\n        { name: 'pl', imageSrc: 'images/flags/poland.png' },\r\n        { name: 'en', imageSrc: 'images/flags/england.png' }\r\n    ]);\r\n    const { t, i18n } = useTranslation();\r\n    const { camera } = useThree();\r\n    const [hovered, setHovered] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        document.body.style.cursor = hovered ? 'pointer' : 'auto'\r\n    }, [hovered])\r\n\r\n    const onNavigationStarted = (name: string) => {\r\n        dispatch({\r\n            type: Types.SetCurrentItem,\r\n            payload: name,\r\n        });\r\n    }\r\n\r\n    const onLanguageChanged = (language: string) => {\r\n        i18n.changeLanguage(language);\r\n    };\r\n\r\n    return (\r\n        <group\r\n            position={[camera.position.x, 3, camera.position.z - 5]}\r\n            onPointerOver={() => setHovered(true)}\r\n            onPointerOut={() => setHovered(false)}\r\n            visible={!fullScreen && !currentItem.endsWith('to')}\r\n        >\r\n            <group onClick={() => onNavigationStarted('home.to')}>\r\n                <Text\r\n                    position-x={-5}\r\n                    color='#d4af37'\r\n                    font='fonts/Oswald.ttf'\r\n                    fontSize={1}\r\n                    material-depthTest={false}\r\n                    layers={[1]}\r\n                >\r\n                    M\r\n                </Text>\r\n                <Text\r\n                    position-x={-3}\r\n                    color='#fff'\r\n                    font='fonts/Oswald.ttf'\r\n                    fontSize={0.5}\r\n                    material-depthTest={false}\r\n                    layers={[1]}\r\n                >\r\n                    KAMIL MROCZEK\r\n                </Text>\r\n            </group>\r\n            {\r\n                items.map((item: NavbarItem, index: number) =>\r\n                    <Fragment key={index}>\r\n                        <Item\r\n                            name={t(`navItems.${index}`)}\r\n                            position={(index + 1) * 1.7}\r\n                            onClick={() => onNavigationStarted(`${item.name}.to`)}\r\n                        />\r\n                    </Fragment>\r\n                )\r\n            }\r\n            {\r\n                languages.map((language: LanguageItem, index: number) =>\r\n                    <Fragment key={index}>\r\n                        <Suspense fallback={<Loader />}>\r\n                            <Language\r\n                                imageSrc={language.imageSrc}\r\n                                name={language.name}\r\n                                position={5.5 + (index + 1) * 0.7}\r\n                                onClick={() => onLanguageChanged(language.name)}\r\n                            />\r\n                        </Suspense>\r\n                    </Fragment>\r\n                )\r\n            }\r\n        </group>\r\n    )\r\n})\r\n\r\nexport default Navbar;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Home.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\components\\Loader.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\components\\functions.ts",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\projects\\Project.tsx",["134","135","136","137","138","139"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Globe.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Texts.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Photo.tsx",["140"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Objects.tsx",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":16},{"ruleId":"145","severity":1,"message":"146","line":1,"column":10,"nodeType":"147","messageId":"148","endLine":1,"endColumn":16},{"ruleId":"145","severity":1,"message":"149","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":15},{"ruleId":"145","severity":1,"message":"150","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":14},{"ruleId":"145","severity":1,"message":"151","line":11,"column":33,"nodeType":"147","messageId":"148","endLine":11,"endColumn":52},{"ruleId":"145","severity":1,"message":"152","line":13,"column":7,"nodeType":"147","messageId":"148","endLine":13,"endColumn":16},{"ruleId":"145","severity":1,"message":"153","line":59,"column":11,"nodeType":"147","messageId":"148","endLine":59,"endColumn":19},{"ruleId":"145","severity":1,"message":"154","line":7,"column":10,"nodeType":"147","messageId":"148","endLine":7,"endColumn":23},{"ruleId":"145","severity":1,"message":"155","line":9,"column":10,"nodeType":"147","messageId":"148","endLine":9,"endColumn":18},{"ruleId":"156","severity":1,"message":"157","line":19,"column":8,"nodeType":"158","endLine":19,"endColumn":10,"suggestions":"159"},{"ruleId":"145","severity":1,"message":"160","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":13},{"ruleId":"145","severity":1,"message":"161","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":23},{"ruleId":"145","severity":1,"message":"162","line":1,"column":34,"nodeType":"147","messageId":"148","endLine":1,"endColumn":43},{"ruleId":"145","severity":1,"message":"163","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":17},{"ruleId":"145","severity":1,"message":"164","line":8,"column":5,"nodeType":"147","messageId":"148","endLine":8,"endColumn":19},{"ruleId":"145","severity":1,"message":"165","line":9,"column":5,"nodeType":"147","messageId":"148","endLine":9,"endColumn":24},{"ruleId":"145","severity":1,"message":"166","line":11,"column":39,"nodeType":"147","messageId":"148","endLine":11,"endColumn":47},{"ruleId":"145","severity":1,"message":"167","line":14,"column":24,"nodeType":"147","messageId":"148","endLine":14,"endColumn":28},{"ruleId":"156","severity":1,"message":"168","line":54,"column":8,"nodeType":"158","endLine":54,"endColumn":10,"suggestions":"169"},{"ruleId":"156","severity":1,"message":"170","line":36,"column":8,"nodeType":"158","endLine":36,"endColumn":21,"suggestions":"171"},{"ruleId":"156","severity":1,"message":"172","line":59,"column":8,"nodeType":"158","endLine":59,"endColumn":22,"suggestions":"173"},{"ruleId":"145","severity":1,"message":"174","line":6,"column":10,"nodeType":"147","messageId":"148","endLine":6,"endColumn":14},{"ruleId":"145","severity":1,"message":"175","line":7,"column":10,"nodeType":"147","messageId":"148","endLine":7,"endColumn":30},{"ruleId":"145","severity":1,"message":"176","line":7,"column":32,"nodeType":"147","messageId":"148","endLine":7,"endColumn":38},{"ruleId":"145","severity":1,"message":"177","line":7,"column":55,"nodeType":"147","messageId":"148","endLine":7,"endColumn":68},{"ruleId":"145","severity":1,"message":"178","line":1,"column":58,"nodeType":"147","messageId":"148","endLine":1,"endColumn":66},{"ruleId":"145","severity":1,"message":"179","line":15,"column":25,"nodeType":"147","messageId":"148","endLine":15,"endColumn":28},{"ruleId":"156","severity":1,"message":"180","line":39,"column":8,"nodeType":"158","endLine":39,"endColumn":10,"suggestions":"181"},{"ruleId":"156","severity":1,"message":"182","line":83,"column":8,"nodeType":"158","endLine":83,"endColumn":16,"suggestions":"183"},{"ruleId":"156","severity":1,"message":"184","line":95,"column":8,"nodeType":"158","endLine":95,"endColumn":15,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":162,"column":42,"nodeType":"188","messageId":"189","endLine":162,"endColumn":44},{"ruleId":"156","severity":1,"message":"190","line":53,"column":9,"nodeType":"158","endLine":53,"endColumn":11,"suggestions":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"@typescript-eslint/no-unused-vars","'Camera' is defined but never used.","Identifier","unusedVar","'Types' is defined but never used.","'Navbar' is defined but never used.","'ReinhardToneMapping' is defined but never used.","'Particles' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'OrbitControls' is defined but never used.","'useFrame' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateMousePosition'. Either include it or remove the dependency array.","ArrayExpression",["194"],"'React' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'Vector2' is defined but never used.","'FILM_LAYER_NUM' is defined but never used.","'MULTIPASS_LAYER_NUM' is defined but never used.","'filmPass' is defined but never used.","'size' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'camera', 'gl', and 'scene'. Either include them or remove the dependency array.",["195"],"React Hook useEffect has missing dependencies: 'camera' and 'onNavigationEnded'. Either include them or remove the dependency array.",["196"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["197"],"'Html' is defined but never used.","'MeshStandardMaterial' is defined but never used.","'Shader' is defined but never used.","'WebGLRenderer' is defined but never used.","'Suspense' is defined but never used.","'gui' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'medium' and 'vidPlayer'. Either include them or remove the dependency array.",["198"],"React Hook useEffect has missing dependencies: 'medium', 'name', 'timeline', 'vidPlayer', 'x', and 'y'. Either include them or remove the dependency array.",["199"],"React Hook useEffect has missing dependencies: 'x' and 'y'. Either include them or remove the dependency array.",["200"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useMemo has missing dependencies: 'maskTexture' and 'photoTexture'. Either include them or remove the dependency array.",["201"],"no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [updateMousePosition]",{"range":"218","text":"219"},"Update the dependencies array to be: [camera, gl, scene]",{"range":"220","text":"221"},"Update the dependencies array to be: [camera, currentItem, onNavigationEnded]",{"range":"222","text":"223"},"Update the dependencies array to be: [dispatch, projectItems]",{"range":"224","text":"225"},"Update the dependencies array to be: [medium, vidPlayer]",{"range":"226","text":"227"},"Update the dependencies array to be: [active, medium, name, timeline, vidPlayer, x, y]",{"range":"228","text":"229"},"Update the dependencies array to be: [focus, x, y]",{"range":"230","text":"231"},"Update the dependencies array to be: [maskTexture, photoTexture]",{"range":"232","text":"233"},[690,692],"[updateMousePosition]",[2051,2053],"[camera, gl, scene]",[1537,1550],"[camera, currentItem, onNavigationEnded]",[3014,3028],"[dispatch, projectItems]",[1757,1759],"[medium, vidPlayer]",[4033,4041],"[active, medium, name, timeline, vidPlayer, x, y]",[4783,4790],"[focus, x, y]",[2247,2249],"[maskTexture, photoTexture]"]
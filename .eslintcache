[{"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\index.tsx":"1","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\reportWebVitals.ts":"2","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\App.tsx":"3","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Navbar.tsx":"4","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Home.tsx":"5","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Scene.tsx":"6","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Education.tsx":"7","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Projects.tsx":"8","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\index.tsx":"9","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\reducers.tsx":"10","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Contact.tsx":"11","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\i18n.ts":"12","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\functions.ts":"13","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Loader.tsx":"14","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\SceneController.tsx":"15"},{"size":1173,"mtime":1615244637424,"results":"16","hashOfConfig":"17"},{"size":440,"mtime":1614182950498,"results":"18","hashOfConfig":"17"},{"size":1731,"mtime":1622211756082,"results":"19","hashOfConfig":"17"},{"size":2372,"mtime":1617370627810,"results":"20","hashOfConfig":"17"},{"size":7304,"mtime":1622215932011,"results":"21","hashOfConfig":"17"},{"size":1727,"mtime":1622145231694,"results":"22","hashOfConfig":"17"},{"size":3239,"mtime":1621549343994,"results":"23","hashOfConfig":"17"},{"size":13114,"mtime":1622150863834,"results":"24","hashOfConfig":"17"},{"size":1166,"mtime":1617370915067,"results":"25","hashOfConfig":"17"},{"size":1246,"mtime":1616020094322,"results":"26","hashOfConfig":"17"},{"size":3632,"mtime":1622211541378,"results":"27","hashOfConfig":"17"},{"size":837,"mtime":1615245228365,"results":"28","hashOfConfig":"17"},{"size":932,"mtime":1621545499197,"results":"29","hashOfConfig":"17"},{"size":516,"mtime":1616965634255,"results":"30","hashOfConfig":"17"},{"size":1636,"mtime":1621546653759,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"g7aof9",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\index.tsx",[],["69","70"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\reportWebVitals.ts",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\App.tsx",["71"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Navbar.tsx",["72"],"import React, { useContext, useState } from 'react';\r\nimport './styles/navbar.css';\r\nimport { NavbarItem } from './App';\r\nimport { AppContext } from './context';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Types } from './context/reducers';\r\n\r\ninterface NavProps {\r\n    items: Array<NavbarItem>\r\n}\r\n\r\ninterface LanguageItem {\r\n    name: string,\r\n    src: string,\r\n}\r\n\r\nconst Navbar = ({ items }: NavProps): JSX.Element => {\r\n    console.log('navbar rendered');\r\n    const { state, dispatch } = useContext(AppContext);\r\n    const { fullScreen } = state.scene;\r\n    const [languages] = useState<Array<LanguageItem>>([\r\n        { name: 'pl', src: 'images/flags/poland.png' },\r\n        { name: 'en', src: 'images/flags/england.png' }\r\n    ]);\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const onNavigationStarted = (name: string) => {\r\n        dispatch({\r\n            type: Types.SetCurrentItem,\r\n            payload: name,\r\n        });\r\n    }\r\n\r\n    const onLanguageChanged = (language: string) => {\r\n        i18n.changeLanguage(language);\r\n    };\r\n\r\n    return !fullScreen ? (\r\n        <div className='navbar-container'>\r\n            <div className=\"logo-container\">\r\n                <svg\r\n                    className=\"logo\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 200 100\"\r\n                    fill=\"rgba(255, 255, 255, 0)\"\r\n                >\r\n                    <path d=\"M 50 100 L 50 0 L 100 50 L 150 0 L 150 100\" />\r\n                </svg>\r\n                <Link className='full-name' to={'/'} onClick={() => onNavigationStarted('home.to')}>KAMIL MROCZEK</ Link>\r\n            </div>\r\n            <ul>\r\n                {\r\n                    items.map((item: NavbarItem, index: number) =>\r\n                        <li key={index}>\r\n                            <Link to={`/${item.name}`} onClick={() => onNavigationStarted(`${item.name}.to`)}>{t(`navItems.${index}`)}</Link>\r\n                        </li>\r\n                    )\r\n                }\r\n                {\r\n                    languages.map((language: LanguageItem, index: number) =>\r\n                        <img key={index} src={language.src} onClick={() => onLanguageChanged(language.name)} />)\r\n                }\r\n            </ul>\r\n        </div>\r\n    ) : null;\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Home.tsx",["73","74","75","76","77","78"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Scene.tsx",["79","80","81","82"],"import React, { Suspense } from 'react';\r\nimport Home from './Home';\r\nimport Education from './Education';\r\nimport Projects from './Projects';\r\nimport Contact from './Contact';\r\nimport { TextureLoader, BackSide } from 'three';\r\nimport SceneController from './SceneController';\r\nimport { OrbitControls } from '@react-three/drei';\r\nimport Loader from './Loader';\r\n\r\nconst Skybox = React.memo(() => {\r\n    console.log('skybox rendered');\r\n    const textures: Array<string> = [\r\n        'images/textures/skybox/space_ft.png',\r\n        'images/textures/skybox/space_bk.png',\r\n        'images/textures/skybox/space_up.png',\r\n        'images/textures/skybox/space_dn.png',\r\n        'images/textures/skybox/space_rt.png',\r\n        'images/textures/skybox/space_lf.png'\r\n    ];\r\n\r\n    return <mesh>\r\n        <boxBufferGeometry args={[1000, 1000, 1000]} />\r\n        {\r\n            textures.map((value: string, i: number) => {\r\n                const texture = new TextureLoader().load(value);\r\n                console.log(texture);\r\n                return <meshBasicMaterial key={i} attachArray='material' map={texture} side={BackSide} />;\r\n            })\r\n        }\r\n    </mesh>\r\n})\r\n\r\nconst Scene = (): JSX.Element => {\r\n    console.log('scene rendered');\r\n\r\n    return (\r\n        <>\r\n            <Home />\r\n            <Education />\r\n            <Projects />\r\n            <Contact />\r\n            <directionalLight position={[0, 1, 1]} intensity={1} color={'#fff'} />\r\n            <ambientLight color={'#404040'} />\r\n            <SceneController />\r\n            {/* <Suspense fallback={null}>\r\n                <Skybox />\r\n            </Suspense> */}\r\n            {/* <OrbitControls /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Scene;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Education.tsx",["83","84","85","86"],"import React, { Suspense, useContext, useEffect, useRef, useState } from 'react';\r\nimport { useFrame, useLoader } from 'react-three-fiber'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { Text } from '@react-three/drei';\r\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Loader from './Loader';\r\nimport { AppContext } from './context';\r\nimport gsap from 'gsap';\r\n\r\ninterface InstitutionItem {\r\n    id: number,\r\n    name?: string,\r\n    objSrc: string,\r\n    desc?: string,\r\n    scale: number,\r\n    x: number,\r\n    y: number,\r\n    focus?: boolean\r\n}\r\n\r\nconst Institution = ({ id, name, objSrc, desc, scale, x, y, focus }: InstitutionItem): JSX.Element => {\r\n    const obj = useLoader(GLTFLoader, objSrc);\r\n    const insitution = useRef(null);\r\n\r\n    useFrame(() => {\r\n        obj.scene.rotation.y += 0.01;\r\n    })\r\n\r\n    useEffect(() => {\r\n        focus ?\r\n            insitution.current && gsap.to(insitution.current.scale, { x: 1, y: 1, z: 1, duration: 5, ease: 'expo.out' }) :\r\n            insitution.current && gsap.to(insitution.current.scale, { x: 0, y: 0, z: 0, duration: 5, ease: 'expo.out' });\r\n    }, [focus])\r\n\r\n    return (\r\n        <group\r\n            ref={insitution}\r\n            position={[x, y, -18]}\r\n            scale={[0, 0, 0]}\r\n        >\r\n            <mesh scale={[scale, scale, scale]}>\r\n                <primitive object={obj.scene} />\r\n                <meshBasicMaterial />\r\n            </mesh>\r\n            <Text\r\n                color='#d4af37'\r\n                font='fonts/Oswald.ttf'\r\n                fontSize={0.3}\r\n                textAlign='center'\r\n                anchorY={0.5}\r\n            >\r\n                {name}\r\n            </Text>\r\n            <Text\r\n                color='#fff'\r\n                font='fonts/Oswald.ttf'\r\n                fontSize={0.15}\r\n                textAlign='center'\r\n                anchorY={2}\r\n            >\r\n                {desc}\r\n            </Text>\r\n        </group>\r\n    )\r\n}\r\n\r\nconst Education = React.memo(() => {\r\n    const [institutionItems, setInstitutionItems] = useState<Array<InstitutionItem>>(\r\n        [\r\n            { id: 0, objSrc: 'models/school.glb', scale: 0.1, x: -3, y: 1 },\r\n            { id: 1, objSrc: 'models/college.glb', scale: 0.2, x: 0, y: 1 },\r\n            { id: 2, objSrc: 'models/uni.glb', scale: 0.2, x: 3, y: 1 },\r\n        ]\r\n    );\r\n    const { t, i18n } = useTranslation();\r\n    const { state } = useContext(AppContext);\r\n    const { currentItem } = state.scene;\r\n    const [focus, setFocus] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        currentItem == 'education.end' ? setFocus(true) : setFocus(false);\r\n    }, [currentItem])\r\n\r\n    return (\r\n        <Suspense fallback={<Loader />}>\r\n            {\r\n                institutionItems.map((e: InstitutionItem, i: number) =>\r\n                    <Institution\r\n                        key={i} {...e}\r\n                        name={t(`educationTitles.${i}`)}\r\n                        desc={t(`educationDesc.${i}`)}\r\n                        focus={focus}\r\n                    />\r\n                )\r\n            }\r\n        </Suspense>\r\n    )\r\n})\r\n\r\nexport default Education;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Projects.tsx",["87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"import React, { useContext, useRef, useState, useEffect, Suspense } from 'react';\r\nimport { useFrame, useLoader, useResource, useThree } from 'react-three-fiber'\r\nimport { AppContext } from './context';\r\nimport { Vector3 } from 'three/src/math/Vector3';\r\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\r\nimport { Text, Html, useGLTF, RoundedBox } from '@react-three/drei';\r\nimport { Types } from './context/reducers';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Loader from './Loader';\r\nimport gsap, { TimelineMax } from 'gsap';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport RoundedBoxGeometry from 'three-rounded-box'\r\nimport { Mesh, PlaneGeometry, ShaderMaterial, Vector2, VideoTexture } from 'three';\r\n\r\ninterface ProjectItem {\r\n    id: number,\r\n    name: string,\r\n    logos: Array<string>,\r\n    medium: string,\r\n    github: string,\r\n    x: number,\r\n    y: number,\r\n    active: boolean,\r\n    focus?: boolean,\r\n    onClick?: (id: number) => void,\r\n}\r\n\r\nconst vshader = `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n}\r\n`\r\nconst fshader = `\r\nvarying vec2 vUv;\r\n\r\nuniform sampler2D u_tex;\r\nuniform vec2 u_adjust_uv;\r\n\r\nvoid main()\r\n{\r\n  vec2 uv = vec2(0.5) + vUv * u_adjust_uv - u_adjust_uv*0.5;\r\n  vec3 color = vec3(0.3);\r\n  if (uv.x>=0.0 && uv.y>=0.0 && uv.x<1.0 && uv.y<1.0) color = texture2D(u_tex, uv).rgb;\r\n  gl_FragColor = vec4(color, 1.0);\r\n}\r\n`\r\n\r\nconst Project = ({ id, name, logos, medium, github, x, y, active, focus, onClick }: ProjectItem): JSX.Element => {\r\n    const { state } = useContext(AppContext);\r\n    const { fullScreen, gui } = state.scene;\r\n    const { t, i18n } = useTranslation();\r\n    const [hovered, setHovered] = useState<boolean>(false);\r\n    const [vidPlayer] = useState(() => {\r\n        const vid = document.createElement('video');\r\n        vid.src = `videos/${name}.mp4`;\r\n        vid.onerror = () => console.log(`${name} error ${vid.error.code}; details: ${vid.error.message}`);\r\n        vid.crossOrigin = 'Anonymous';\r\n        vid.loop = true;\r\n        vid.controls = true;\r\n        vid.load();\r\n        return vid;\r\n    });\r\n    const [vidObject] = useState(() => {\r\n        const geometry = medium == 'desktop' ? new PlaneGeometry(2, 1) : new PlaneGeometry(1, 2);\r\n        const uniforms = {\r\n            u_tex: { value: new VideoTexture(vidPlayer) },\r\n            u_adjust_uv: { value: medium == 'desktop' ? new Vector2(1, 1) : new Vector2(1, 1) }\r\n        }\r\n        const material = new ShaderMaterial({\r\n            uniforms: uniforms,\r\n            vertexShader: vshader,\r\n            fragmentShader: fshader\r\n        });\r\n\r\n        const video = new Mesh(geometry, material);\r\n        return video;\r\n    });\r\n    const project = useRef(null);\r\n    const projectVideo = useRef(null);\r\n    const projectDescription = useRef(null);\r\n    const exit = useRef(null);\r\n    const normalMap1 = useLoader(TextureLoader, 'images/textures/nm1.jpg');\r\n    const normalMap2 = useLoader(TextureLoader, 'images/textures/nm2.jpg');\r\n    const timeline = gsap.timeline();\r\n\r\n    // useEffect(() => {\r\n    //     project.current && gui.add(project.current.rotation, 'x').min(0).max(360)\r\n    //     project.current && gui.add(project.current.rotation, 'y').min(0).max(360)\r\n    //     project.current && gui.add(project.current.rotation, 'z').min(0).max(360)\r\n    //     console.log(viewport.width)\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        document.body.style.cursor = hovered ? 'pointer' : 'auto';\r\n        hovered ?\r\n            project.current && gsap.to(project.current.scale, { duration: 1, ease: 'expo.out', x: 1.1, y: 1.1 }) :\r\n            project.current && gsap.to(project.current.scale, { duration: 1, ease: 'expo.out', x: 1, y: 1 });\r\n    }, [hovered])\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            vidPlayer && vidPlayer.play();\r\n            projectDescription.current.visible = true;\r\n            if (medium == 'desktop') {\r\n                timeline.to(project.current.position, { x: 16, y: 0, z: -17.5 });\r\n                timeline.to(project.current.scale, { x: 2, y: 2, z: 2, duration: 1 });\r\n            } else {\r\n                timeline.to(project.current.position, { x: 16.5, y: 0, z: -17.5 });\r\n                timeline.to(project.current.scale, { x: 1.6, y: 1.6, z: 1.6, duration: 1 });\r\n            }\r\n            timeline.to(project.current.rotation, { y: -0.2, duration: 1 });\r\n        }\r\n        if (!active) {\r\n            vidPlayer && vidPlayer.pause();\r\n            projectDescription.current.visible = false;\r\n            timeline.to(project.current.position, { x: x, y: y, z: -18 })\r\n            timeline.to(project.current.rotation, { y: 0, duration: 1 });\r\n            timeline.to(project.current.scale, { x: 1, y: 1, z: 1, duration: 1 });\r\n        }\r\n    }, [active])\r\n\r\n    // useEffect(() => {\r\n    //     focus ?\r\n    //         project.current && gsap.to(project.current.position, { duration: 5, ease: 'expo.out', x: 0, y: 0, z: 0 }) :\r\n    //         project.current && gsap.to(project.current.position, { duration: 5, ease: 'expo.out', x: generateNumber(-2, 2), y: generateNumber(-2, 2), z: generateNumber(-2, 2) });\r\n    // }, [focus])\r\n\r\n    const generateNumber = (min: number, max: number) => {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    const onSelected = () => {\r\n        setHovered(false);\r\n        onClick(id);\r\n    }\r\n\r\n    const onExit = () => {\r\n        setHovered(false);\r\n        onClick(null);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <group\r\n                ref={project}\r\n                position={[x, y - 0.1, -18]}\r\n                onClick={fullScreen ? null : onSelected}\r\n                onPointerOver={fullScreen ? null : () => setHovered(true)}\r\n                onPointerOut={fullScreen ? null : () => setHovered(false)}\r\n            >\r\n                <primitive object={vidObject} />\r\n            </group>\r\n            <group\r\n                ref={projectDescription}\r\n                visible={false}\r\n                position={[14.3, 0, -16]}\r\n            >\r\n                <mesh>\r\n                    <planeBufferGeometry args={[1.5, 1.5]} />\r\n                    <meshStandardMaterial\r\n                        map={normalMap1}\r\n                        color='#000'\r\n                        opacity={0.5}\r\n                        transparent\r\n                    />\r\n                </mesh>\r\n                <group>\r\n                    <Text\r\n                        color='#d4af37'\r\n                        font='fonts/Oswald.ttf'\r\n                        fontSize={0.1}\r\n                        maxWidth={1.5}\r\n                        textAlign='center'\r\n                        anchorY={-0.7}\r\n                    >\r\n                        {t(`projectTitles.${id}`)}\r\n                    </Text>\r\n                    <Text\r\n                        color='#fff'\r\n                        font='fonts/Oswald.ttf'\r\n                        fontSize={0.08}\r\n                        maxWidth={1}\r\n                        textAlign='center'\r\n                        anchorY={-0.5}\r\n                        lineHeight={2}\r\n                    >\r\n                        {t(`projectDesc.${id}`)}\r\n                    </Text>\r\n                    <Text\r\n                        color='#fff'\r\n                        font='fonts/Oswald.ttf'\r\n                        fontSize={0.06}\r\n                        maxWidth={1}\r\n                        textAlign='center'\r\n                        anchorY={0.4}\r\n                        lineHeight={2}\r\n                    >\r\n                        {github}\r\n                    </Text>\r\n                </group>\r\n                {logos.map((logo: string, index: number) => {\r\n                    const texture = new TextureLoader().load(`images/logos/${logo}.png`);\r\n\r\n                    return <mesh position-x={0.5 * (index % 3) - 0.5} position-y={index < 3 ? -0.6 : -0.8}>\r\n                        <planeBufferGeometry args={[0.2, 0.1]} />\r\n                        <meshStandardMaterial map={texture} transparent />\r\n                    </mesh>\r\n                })}\r\n            </group>\r\n            {\r\n                fullScreen &&\r\n                <Text\r\n                    ref={exit}\r\n                    position={[17, -1, -16.5]}\r\n                    color='#d4af37'\r\n                    font='fonts/Oswald.ttf'\r\n                    fontSize={0.2}\r\n                    onClick={onExit}\r\n                >\r\n                    {t('exit')}\r\n                </Text>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst Projects = React.memo(() => {\r\n    console.log('projects rendered');\r\n    const { state, dispatch } = useContext(AppContext);\r\n    const { currentItem, gui } = state.scene;\r\n    const [projectItems, setProjectItems] = useState<Array<ProjectItem>>([\r\n        { id: 0, name: 'gfe', logos: ['vue', 'uikit', 'firebase'], medium: 'desktop', github: '-------------------', x: 12, y: 1, active: false },\r\n        { id: 1, name: 'stalcraft', logos: ['angular', 'node'], medium: 'desktop', github: 'https://github.com/kmroczek11/Stalcraft', x: 14, y: 1, active: false },\r\n        { id: 2, name: 'shop', logos: ['aspnet', 'mysql'], medium: 'desktop', github: 'https://github.com/kmroczek11/Shop', x: 16, y: 1, active: false },\r\n        { id: 3, name: 'coronastats', logos: ['reactnative', 'redux'], medium: 'mobile', github: 'https://github.com/kmroczek11/Coronastats', x: 18, y: 1, active: false },\r\n        { id: 4, name: 'marbles', logos: ['three', 'node', 'jquery', 'ajax', 'socketio', 'mongodb'], medium: 'desktop', github: 'https://github.com/kmroczek11/Marbles', x: 12, y: -1, active: false },\r\n        { id: 5, name: 'mp3player', logos: ['jquery', 'node', 'ajax'], medium: 'desktop', github: 'https://github.com/kmroczek11/School-projects/tree/master/MP3%20Player', x: 14, y: -1, active: false },\r\n        { id: 6, name: 'tasky', logos: ['flutter', 'rive', 'firebase'], medium: 'mobile', github: 'https://github.com/kmroczek11/Tasky', x: 16, y: -1, active: false },\r\n        // { id: 7, name: '', logos: ['react', 'sass'], medium: 'desktop', github: 'https://github.com/kmroczek11/Portfolio', x: 18, y: -1, active: false },\r\n    ]);\r\n    const [selected, setSelected] = useState<number>(null);\r\n    const [focus, setFocus] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        currentItem == 'projects.end' ? setFocus(true) : setFocus(false);\r\n    }, [currentItem])\r\n    const light1 = useRef(null);\r\n    const light2 = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // light1.current && gui.add(light1.current.position, 'x').min(10).max(20);\r\n        // light1.current && gui.add(light1.current.position, 'y').min(-5).max(5);\r\n        // light1.current && gui.add(light1.current.position, 'z').min(-20).max(-10);\r\n        // light2.current && gui.add(light2.current.position, 'x').min(10).max(20);\r\n        // light2.current && gui.add(light2.current.position, 'y').min(-5).max(5);\r\n        // light2.current && gui.add(light2.current.position, 'z').min(-20).max(-10);\r\n        // const t = new TimelineMax({yoyo:true,repeat:-1});\r\n\r\n        // light1.current && t.from(light1.current.position, {x:20, y:1, z:-16 ,ease: 'slow( 0.1, 0.7, false)', duration: 5, });\r\n        // light2.current && t.from(light2.current.position, {x:20, y:0, z:-16 ,ease: 'slow( 0.1, 0.7, false)', duration: 5, });\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setProjectItems(prevProjectItems =>\r\n            prevProjectItems.map(\r\n                (e: ProjectItem) =>\r\n                    e.id === selected ?\r\n                        { ...e, active: true } : { ...e, active: false }\r\n            ));\r\n    }, [selected])\r\n\r\n    useEffect(() => {\r\n        projectItems.some((e: ProjectItem) => e.active) ?\r\n            dispatch({\r\n                type: Types.SetFullScreen,\r\n                payload: true,\r\n            }) : dispatch({\r\n                type: Types.SetFullScreen,\r\n                payload: false,\r\n            });\r\n    }, [projectItems])\r\n\r\n    return (\r\n        <>\r\n            {/* <pointLight ref={light1} color='#fff' position={[10, 0.5, -16]} intensity={5} distance={5} />\r\n            {light1.current && <pointLightHelper args={[light1.current, 0.5]} />}\r\n            <pointLight ref={light2} color='#d4af37' position={[10, 0, -16]} intensity={5} distance={5} />\r\n            {light2.current && <pointLightHelper args={[light2.current, 0.5]} />} */}\r\n            {\r\n                projectItems.map(\r\n                    (e: ProjectItem, i: number) =>\r\n                        <Suspense fallback={<Loader />}>\r\n                            <Project\r\n                                key={i}\r\n                                {...e}\r\n                                focus={focus}\r\n                                onClick={setSelected}\r\n                            />\r\n                        </Suspense>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Projects;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\index.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\reducers.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Contact.tsx",["111"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\i18n.ts",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\functions.ts",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Loader.tsx",["112"],"import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Text, useProgress } from '@react-three/drei';\r\n\r\nconst Loader = (): JSX.Element => {\r\n    const { progress } = useProgress();\r\n    const { t, i18n } = useTranslation();\r\n    console.log(progress);\r\n\r\n    return <Text\r\n        color='#d4af37'\r\n        font='fonts/Oswald.ttf'\r\n        fontSize={0.5}\r\n        textAlign='center'\r\n    >\r\n        {t('loadingMessage', { progress: progress })}\r\n    </Text>\r\n}\r\n\r\nexport default Loader;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\SceneController.tsx",["113","114","115","116"],"import React, { useContext, useEffect } from 'react';\r\nimport { useFrame } from 'react-three-fiber'\r\nimport { AppContext } from './context';\r\nimport { Vector3 } from 'three/src/math/Vector3';\r\nimport gsap from 'gsap';\r\nimport { Types } from './context/reducers';\r\n\r\nconst SceneController = (): JSX.Element => {\r\n    const { state, dispatch } = useContext(AppContext);\r\n    const { camera, currentItem } = state.scene;\r\n\r\n    const onNavigationEnded = (name: string) => {\r\n        dispatch({\r\n            type: Types.SetCurrentItem,\r\n            payload: name,\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        switch (currentItem) {\r\n            case 'home.to':\r\n                camera && gsap.to(camera.position, { x: 0, y: 0, z: 5, duration: 5, ease: 'expo.out', onComplete: () => onNavigationEnded('home.end') });\r\n                break;\r\n            case 'education.to':\r\n                camera && gsap.to(camera.position, { x: 0, y: 0, z: -15, duration: 5, ease: 'expo.out', onComplete: () => onNavigationEnded('education.end') });\r\n                break;\r\n            case 'projects.to':\r\n                camera && gsap.to(camera.position, { x: 15, y: 0, z: -15, duration: 5, ease: 'expo.out', onComplete: () => onNavigationEnded('projects.end') });\r\n                break;\r\n            case 'contact.to':\r\n                camera && gsap.to(camera.position, { x: 15, y: 0, z: 5, duration: 5, ease: 'expo.out', onComplete: () => onNavigationEnded('contact.end') });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [currentItem])\r\n\r\n    return null;\r\n}\r\n\r\nexport default SceneController;",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":8,"column":10,"nodeType":"123","messageId":"124","endLine":8,"endColumn":15},{"ruleId":"125","severity":1,"message":"126","line":62,"column":25,"nodeType":"127","endLine":62,"endColumn":112},{"ruleId":"121","severity":1,"message":"128","line":7,"column":10,"nodeType":"123","messageId":"124","endLine":7,"endColumn":17},{"ruleId":"121","severity":1,"message":"129","line":12,"column":10,"nodeType":"123","messageId":"124","endLine":12,"endColumn":25},{"ruleId":"121","severity":1,"message":"130","line":12,"column":27,"nodeType":"123","messageId":"124","endLine":12,"endColumn":41},{"ruleId":"121","severity":1,"message":"131","line":16,"column":16,"nodeType":"123","messageId":"124","endLine":16,"endColumn":20},{"ruleId":"121","severity":1,"message":"132","line":61,"column":11,"nodeType":"123","messageId":"124","endLine":61,"endColumn":18},{"ruleId":"133","severity":1,"message":"134","line":178,"column":21,"nodeType":"135","messageId":"136","endLine":178,"endColumn":23},{"ruleId":"121","severity":1,"message":"137","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"138","line":8,"column":10,"nodeType":"123","messageId":"124","endLine":8,"endColumn":23},{"ruleId":"121","severity":1,"message":"139","line":9,"column":8,"nodeType":"123","messageId":"124","endLine":9,"endColumn":14},{"ruleId":"121","severity":1,"message":"140","line":11,"column":7,"nodeType":"123","messageId":"124","endLine":11,"endColumn":13},{"ruleId":"121","severity":1,"message":"141","line":5,"column":10,"nodeType":"123","messageId":"124","endLine":5,"endColumn":23},{"ruleId":"121","severity":1,"message":"142","line":69,"column":30,"nodeType":"123","messageId":"124","endLine":69,"endColumn":49},{"ruleId":"121","severity":1,"message":"131","line":76,"column":16,"nodeType":"123","messageId":"124","endLine":76,"endColumn":20},{"ruleId":"133","severity":1,"message":"134","line":82,"column":21,"nodeType":"135","messageId":"136","endLine":82,"endColumn":23},{"ruleId":"121","severity":1,"message":"143","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":18},{"ruleId":"121","severity":1,"message":"144","line":2,"column":31,"nodeType":"123","messageId":"124","endLine":2,"endColumn":42},{"ruleId":"121","severity":1,"message":"145","line":2,"column":44,"nodeType":"123","messageId":"124","endLine":2,"endColumn":52},{"ruleId":"121","severity":1,"message":"146","line":4,"column":10,"nodeType":"123","messageId":"124","endLine":4,"endColumn":17},{"ruleId":"121","severity":1,"message":"147","line":6,"column":16,"nodeType":"123","messageId":"124","endLine":6,"endColumn":20},{"ruleId":"121","severity":1,"message":"148","line":6,"column":22,"nodeType":"123","messageId":"124","endLine":6,"endColumn":29},{"ruleId":"121","severity":1,"message":"149","line":6,"column":31,"nodeType":"123","messageId":"124","endLine":6,"endColumn":41},{"ruleId":"121","severity":1,"message":"150","line":10,"column":16,"nodeType":"123","messageId":"124","endLine":10,"endColumn":27},{"ruleId":"121","severity":1,"message":"151","line":11,"column":10,"nodeType":"123","messageId":"124","endLine":11,"endColumn":20},{"ruleId":"121","severity":1,"message":"152","line":12,"column":8,"nodeType":"123","messageId":"124","endLine":12,"endColumn":26},{"ruleId":"121","severity":1,"message":"153","line":54,"column":25,"nodeType":"123","messageId":"124","endLine":54,"endColumn":28},{"ruleId":"121","severity":1,"message":"131","line":55,"column":16,"nodeType":"123","messageId":"124","endLine":55,"endColumn":20},{"ruleId":"133","severity":1,"message":"134","line":68,"column":33,"nodeType":"135","messageId":"136","endLine":68,"endColumn":35},{"ruleId":"133","severity":1,"message":"134","line":71,"column":42,"nodeType":"135","messageId":"136","endLine":71,"endColumn":44},{"ruleId":"121","severity":1,"message":"154","line":83,"column":11,"nodeType":"123","messageId":"124","endLine":83,"endColumn":23},{"ruleId":"121","severity":1,"message":"155","line":87,"column":11,"nodeType":"123","messageId":"124","endLine":87,"endColumn":21},{"ruleId":"133","severity":1,"message":"134","line":108,"column":24,"nodeType":"135","messageId":"136","endLine":108,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":124,"column":8,"nodeType":"158","endLine":124,"endColumn":16,"suggestions":"159"},{"ruleId":"121","severity":1,"message":"160","line":132,"column":11,"nodeType":"123","messageId":"124","endLine":132,"endColumn":25},{"ruleId":"121","severity":1,"message":"153","line":236,"column":26,"nodeType":"123","messageId":"124","endLine":236,"endColumn":29},{"ruleId":"133","severity":1,"message":"134","line":251,"column":21,"nodeType":"135","messageId":"136","endLine":251,"endColumn":23},{"ruleId":"121","severity":1,"message":"161","line":253,"column":11,"nodeType":"123","messageId":"124","endLine":253,"endColumn":17},{"ruleId":"121","severity":1,"message":"162","line":254,"column":11,"nodeType":"123","messageId":"124","endLine":254,"endColumn":17},{"ruleId":"156","severity":1,"message":"163","line":287,"column":8,"nodeType":"158","endLine":287,"endColumn":22,"suggestions":"164"},{"ruleId":"121","severity":1,"message":"131","line":8,"column":16,"nodeType":"123","messageId":"124","endLine":8,"endColumn":20},{"ruleId":"121","severity":1,"message":"131","line":7,"column":16,"nodeType":"123","messageId":"124","endLine":7,"endColumn":20},{"ruleId":"121","severity":1,"message":"165","line":1,"column":8,"nodeType":"123","messageId":"124","endLine":1,"endColumn":13},{"ruleId":"121","severity":1,"message":"143","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":18},{"ruleId":"121","severity":1,"message":"146","line":4,"column":10,"nodeType":"123","messageId":"124","endLine":4,"endColumn":17},{"ruleId":"156","severity":1,"message":"166","line":36,"column":8,"nodeType":"158","endLine":36,"endColumn":21,"suggestions":"167"},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"@typescript-eslint/no-unused-vars","'Stars' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Preload' is defined but never used.","'BufferAttribute' is defined but never used.","'BufferGeometry' is defined but never used.","'i18n' is assigned a value but never used.","'texture' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Suspense' is defined but never used.","'OrbitControls' is defined but never used.","'Loader' is defined but never used.","'Skybox' is assigned a value but never used.","'TextureLoader' is defined but never used.","'setInstitutionItems' is assigned a value but never used.","'useFrame' is defined but never used.","'useResource' is defined but never used.","'useThree' is defined but never used.","'Vector3' is defined but never used.","'Html' is defined but never used.","'useGLTF' is defined but never used.","'RoundedBox' is defined but never used.","'TimelineMax' is defined but never used.","'GLTFLoader' is defined but never used.","'RoundedBoxGeometry' is defined but never used.","'gui' is assigned a value but never used.","'projectVideo' is assigned a value but never used.","'normalMap2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'medium', 'timeline', 'vidPlayer', 'x', and 'y'. Either include them or remove the dependency array.","ArrayExpression",["170"],"'generateNumber' is assigned a value but never used.","'light1' is assigned a value but never used.","'light2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["171"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'camera' and 'onNavigationEnded'. Either include them or remove the dependency array.",["172"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [active, medium, timeline, vidPlayer, x, y]",{"range":"179","text":"180"},"Update the dependencies array to be: [dispatch, projectItems]",{"range":"181","text":"182"},"Update the dependencies array to be: [camera, currentItem, onNavigationEnded]",{"range":"183","text":"184"},[4884,4892],"[active, medium, timeline, vidPlayer, x, y]",[12146,12160],"[dispatch, projectItems]",[1564,1577],"[camera, currentItem, onNavigationEnded]"]
[{"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\reportWebVitals.ts":"1","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\index.tsx":"2","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\reducers.tsx":"3","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\postprocessing\\constant.ts":"4","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\postprocessing\\pass.ts":"5","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\index.tsx":"6","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\main\\App.tsx":"7","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\internationalization\\i18n.ts":"8","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\scene\\Scene.tsx":"9","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\hooks\\useMousePosition.tsx":"10","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\components\\Effects.tsx":"11","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\scene\\SceneController.tsx":"12","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\contact\\Contact.tsx":"13","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\projects\\Projects.tsx":"14","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\education\\Education.tsx":"15","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\navigation\\Navbar.tsx":"16","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Home.tsx":"17","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\components\\Loader.tsx":"18","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\components\\functions.ts":"19","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\projects\\Project.tsx":"20","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Globe.tsx":"21","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Texts.tsx":"22","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Photo.tsx":"23","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Objects.tsx":"24"},{"size":440,"mtime":1614182950498,"results":"25","hashOfConfig":"26"},{"size":1085,"mtime":1627041036429,"results":"27","hashOfConfig":"26"},{"size":899,"mtime":1627041059544,"results":"28","hashOfConfig":"26"},{"size":143,"mtime":1625666555056,"results":"29","hashOfConfig":"26"},{"size":2161,"mtime":1625670862307,"results":"30","hashOfConfig":"26"},{"size":1199,"mtime":1626183085368,"results":"31","hashOfConfig":"26"},{"size":3277,"mtime":1627151051826,"results":"32","hashOfConfig":"26"},{"size":837,"mtime":1626182987337,"results":"33","hashOfConfig":"26"},{"size":2856,"mtime":1627043427467,"results":"34","hashOfConfig":"26"},{"size":763,"mtime":1626182523356,"results":"35","hashOfConfig":"26"},{"size":2312,"mtime":1627043516193,"results":"36","hashOfConfig":"26"},{"size":1715,"mtime":1627148005611,"results":"37","hashOfConfig":"26"},{"size":4283,"mtime":1626621958386,"results":"38","hashOfConfig":"26"},{"size":3687,"mtime":1626645700067,"results":"39","hashOfConfig":"26"},{"size":3307,"mtime":1627065243248,"results":"40","hashOfConfig":"26"},{"size":5000,"mtime":1627043466309,"results":"41","hashOfConfig":"26"},{"size":1161,"mtime":1626646426090,"results":"42","hashOfConfig":"26"},{"size":513,"mtime":1626185099424,"results":"43","hashOfConfig":"26"},{"size":1782,"mtime":1626978973723,"results":"44","hashOfConfig":"26"},{"size":10845,"mtime":1626879747026,"results":"45","hashOfConfig":"26"},{"size":2447,"mtime":1627065323216,"results":"46","hashOfConfig":"26"},{"size":2040,"mtime":1626355727619,"results":"47","hashOfConfig":"26"},{"size":4078,"mtime":1627065155984,"results":"48","hashOfConfig":"26"},{"size":1384,"mtime":1627065213660,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"g7aof9",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\reportWebVitals.ts",[],["105","106"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\index.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\reducers.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\postprocessing\\constant.ts",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\postprocessing\\pass.ts",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\index.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\main\\App.tsx",["107","108","109","110","111","112","113","114","115","116"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\internationalization\\i18n.ts",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\scene\\Scene.tsx",["117","118"],"import React, { useEffect } from 'react';\r\nimport Home from '../home/Home';\r\nimport Education from '../education/Education';\r\nimport Projects from '../projects/Projects';\r\nimport Contact from '../contact/Contact';\r\nimport SceneController from './SceneController';\r\nimport { OrbitControls } from '@react-three/drei/core/OrbitControls';\r\nimport { useRef } from 'react';\r\nimport { useFrame, useThree } from '@react-three/fiber';\r\nimport Navbar from '../navigation/Navbar';\r\n\r\n// const Skybox = React.memo(() => {\r\n//     console.log('skybox rendered');\r\n//     const textures: Array<string> = [\r\n//         'images/textures/skybox/space_ft.png',\r\n//         'images/textures/skybox/space_bk.png',\r\n//         'images/textures/skybox/space_up.png',\r\n//         'images/textures/skybox/space_dn.png',\r\n//         'images/textures/skybox/space_rt.png',\r\n//         'images/textures/skybox/space_lf.png'\r\n//     ];\r\n\r\n//     return <mesh>\r\n//         <boxBufferGeometry args={[1000, 1000, 1000]} />\r\n//         {\r\n//             textures.map((value: string, i: number) => {\r\n//                 const texture = new TextureLoader().load(value);\r\n//                 console.log(texture);\r\n//                 return <meshBasicMaterial key={i} attachArray='material' map={texture} side={BackSide} />;\r\n//             })\r\n//         }\r\n//     </mesh>\r\n// })\r\n\r\nconst navbar_items: Array<NavbarItem> = [\r\n    { id: 0, name: 'education' },\r\n    { id: 1, name: 'projects' },\r\n    { id: 2, name: 'contact' },\r\n]\r\n\r\nexport interface NavbarItem {\r\n    id: number,\r\n    name: string,\r\n}\r\n\r\nconst Scene = (): JSX.Element => {\r\n    console.log('scene rendered');\r\n    const light = useRef(null);\r\n    const { camera } = useThree();\r\n\r\n    useEffect(() => {\r\n        if (light.current) {\r\n            light.current.position.set(\r\n                camera.position.x + 10,\r\n                camera.position.y + 10,\r\n                camera.position.z + 10\r\n            )\r\n            console.log(light.current.position)\r\n        }\r\n    }, [camera.position])\r\n\r\n    return (\r\n        <>\r\n            <Navbar items={navbar_items} />\r\n            <Home />\r\n            <Education />\r\n            <Projects />\r\n            <Contact />\r\n            {/* <directionalLight position={[0, 1, 1]} intensity={1} color={'#fff'} /> */}\r\n            <hemisphereLight args={['#fff', '#d4af37', 4]} />\r\n            <spotLight\r\n                ref={light}\r\n                args={['#fff', 2]}\r\n                castShadow={true}\r\n                shadow-bias={-0.0001}\r\n                shadow-mapSize-width={1024 * 4}\r\n                shadow-mapSize-height={1024 * 4}\r\n            />\r\n            <SceneController />\r\n            {/* <Suspense fallback={null}>\r\n                <Skybox />\r\n            </Suspense> */}\r\n            {/* <OrbitControls /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Scene;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\hooks\\useMousePosition.tsx",["119"],"import { useState, useEffect } from 'react';\r\n\r\nconst useMousePosition = (world: string) => {\r\n    const [mousePosition, setMousePosition] = useState<{ x: number, y: number }>({ x: null, y: null });\r\n\r\n    const updateMousePosition = ev => {\r\n        setMousePosition(\r\n            {\r\n                x: world === '2D' ? ev.clientX : (ev.clientX / window.innerWidth) * 2 - 1,\r\n                y: world === '2D' ? ev.clientY : -(ev.clientY / window.innerWidth) * 2 + 1\r\n            }\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('mousemove', updateMousePosition);\r\n\r\n        return () => window.removeEventListener('mousemove', updateMousePosition);\r\n    }, []);\r\n\r\n    return mousePosition;\r\n};\r\n\r\nexport default useMousePosition;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\components\\Effects.tsx",["120"],"import { useMemo, useState } from 'react'\r\nimport { useThree, useFrame } from '@react-three/fiber'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\r\nimport {\r\n    DEFAULT_LAYER_NUM,\r\n    BLOOM_LAYER_NUM,\r\n    // FILM_LAYER_NUM,\r\n    // MULTIPASS_LAYER_NUM\r\n} from '../postprocessing/constant';\r\nimport { createRenderPass, bloomPass, createFinalPass } from \"../postprocessing/pass\";\r\n\r\nconst Effects = (): JSX.Element => {\r\n    const { scene, gl, camera } = useThree()\r\n    const [bloomComposer, setBloomComposer] = useState<EffectComposer>(null);\r\n    const [finalComposer, setFinalComposer] = useState<EffectComposer>(null);\r\n\r\n    useMemo(() => {\r\n        const renderPass = createRenderPass(scene, camera);\r\n\r\n        // setup bloom composer\r\n        const bloomComposer = new EffectComposer(gl);\r\n        bloomComposer.renderToScreen = false;\r\n        bloomComposer.addPass(renderPass);\r\n        bloomComposer.addPass(bloomPass);\r\n\r\n        // setup film composer\r\n        // const filmComposer = new EffectComposer(gl);\r\n        // filmComposer.renderToScreen = false;\r\n        // filmComposer.addPass(renderPass);\r\n        // filmComposer.addPass(filmPass);\r\n\r\n        // setup composer with multiple passes\r\n        // const multipassComposer = new EffectComposer(gl);\r\n        // multipassComposer.renderToScreen = false;\r\n        // multipassComposer.addPass(renderPass);\r\n        // multipassComposer.addPass(bloomPass);\r\n        // multipassComposer.addPass(filmPass);\r\n\r\n        // setup final composer\r\n        const finalComposer = new EffectComposer(gl);\r\n        finalComposer.addPass(renderPass);\r\n        const finalPass = createFinalPass(\r\n            bloomComposer,\r\n            // filmComposer,\r\n            // multipassComposer\r\n        );\r\n        finalComposer.addPass(finalPass);\r\n\r\n        gl.autoClear = false;\r\n\r\n        setBloomComposer(bloomComposer);\r\n        setFinalComposer(finalComposer);\r\n    }, [])\r\n\r\n    useFrame(() => {\r\n        gl.clear();\r\n\r\n        camera.layers.set(BLOOM_LAYER_NUM);\r\n        bloomComposer.swapBuffers();\r\n        bloomComposer.render();\r\n\r\n        camera.layers.set(DEFAULT_LAYER_NUM);\r\n        finalComposer.swapBuffers();\r\n        finalComposer.render();\r\n    })\r\n\r\n    return null;\r\n}\r\n\r\nexport default Effects;\r\n","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\scene\\SceneController.tsx",["121","122","123","124"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\contact\\Contact.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\projects\\Projects.tsx",["125"],"import React, { useContext, useState, useEffect, Suspense, Fragment } from 'react';\r\nimport { AppContext } from '../context';\r\nimport { Types } from '../context/reducers';\r\nimport Loader from '../components/Loader';\r\nimport Project from './Project';\r\n\r\nexport interface ProjectItem {\r\n    id: number,\r\n    name: string,\r\n    logos: Array<string>,\r\n    medium: string,\r\n    preview: string,\r\n    x: number,\r\n    y: number,\r\n    active: boolean,\r\n    focus?: boolean,\r\n    onClick?: (id: number) => void,\r\n}\r\n\r\nconst Projects = React.memo(() => {\r\n    console.log('projects rendered');\r\n    const { state, dispatch } = useContext(AppContext);\r\n    const { currentItem } = state.scene;\r\n    const [projectItems, setProjectItems] = useState<Array<ProjectItem>>([\r\n        { id: 0, name: 'gfe', logos: ['vue', 'uikit', 'firebase'], medium: 'desktop', preview: 'http://www.gfe.agh.edu.pl', x: 11.8, y: 1, active: false },\r\n        { id: 1, name: 'stalcraft', logos: ['angular', 'node'], medium: 'desktop', preview: 'https://github.com/kmroczek11/Stalcraft', x: 14, y: 1, active: false },\r\n        { id: 2, name: 'shop', logos: ['aspnet', 'mysql'], medium: 'desktop', preview: 'https://github.com/kmroczek11/Shop', x: 16.2, y: 1, active: false },\r\n        { id: 3, name: 'marbles', logos: ['three', 'node', 'jquery', 'ajax', 'socketio', 'mongodb'], medium: 'desktop', preview: 'https://github.com/kmroczek11/Marbles', x: 18.4, y: 1, active: false },\r\n        { id: 4, name: 'mp3player', logos: ['jquery', 'node', 'ajax'], medium: 'desktop', preview: 'https://github.com/kmroczek11/School-projects/tree/master/MP3%20Player', x: 11.8, y: -1, active: false },\r\n        { id: 5, name: 'coronastats', logos: ['reactnative', 'redux'], medium: 'mobile', preview: 'https://github.com/kmroczek11/Coronastats', x: 13.5, y: -1, active: false },\r\n        { id: 6, name: 'tasky', logos: ['flutter', 'rive', 'firebase'], medium: 'mobile', preview: 'https://github.com/kmroczek11/Tasky', x: 14.7, y: -1, active: false },\r\n        // { id: 7, name: '', logos: ['react', 'sass'], medium: 'desktop', preview: 'https://github.com/kmroczek11/Portfolio', x: 19.5, y: -1, active: false },\r\n    ]);\r\n    const [selected, setSelected] = useState<number>(null);\r\n    const [focus, setFocus] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        currentItem === 'projects.end' ? setFocus(true) : setFocus(false);\r\n    }, [currentItem])\r\n\r\n    useEffect(() => {\r\n        setProjectItems(prevProjectItems =>\r\n            prevProjectItems.map(\r\n                (e: ProjectItem) =>\r\n                    e.id === selected ?\r\n                        { ...e, active: true } : { ...e, active: false }\r\n            ));\r\n    }, [selected])\r\n\r\n    useEffect(() => {\r\n        projectItems.some((e: ProjectItem) => e.active) ?\r\n            dispatch({\r\n                type: Types.SetFullScreen,\r\n                payload: true,\r\n            }) : dispatch({\r\n                type: Types.SetFullScreen,\r\n                payload: false,\r\n            });\r\n    }, [projectItems])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                projectItems.map(\r\n                    (project: ProjectItem, index: number) =>\r\n                        <Fragment key={index}>\r\n                            <Suspense fallback={<Loader />}>\r\n                                <Project\r\n                                    {...project}\r\n                                    focus={focus}\r\n                                    onClick={setSelected}\r\n                                />\r\n                            </Suspense>\r\n                        </Fragment>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Projects;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\education\\Education.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\navigation\\Navbar.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Home.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\components\\Loader.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\components\\functions.ts",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\projects\\Project.tsx",["126","127","128","129","130","131","132","133","134","135"],"import React, { useContext, useRef, useState, useEffect, Suspense, useMemo, Fragment } from 'react';\r\nimport { AppContext } from '../context';\r\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\r\nimport { RoundedBox, Text } from '@react-three/drei';\r\nimport { useTranslation } from 'react-i18next';\r\nimport gsap from 'gsap';\r\nimport { Mesh, PlaneGeometry, ShaderMaterial, Vector2, VideoTexture } from 'three';\r\nimport videoVertexShader from '../shaders/videoVertex.glsl';\r\nimport videoFragmentShader from '../shaders/videoFragment.glsl';\r\nimport { PointerEvent, MouseEvent } from 'react';\r\nimport { ProjectItem } from './Projects';\r\nimport { useThree } from 'react-three-fiber';\r\nimport { Interaction } from 'three.interaction'\r\n\r\nconst Project = ({ id, name, logos, medium, preview, x, y, active, focus, onClick }: ProjectItem): JSX.Element => {\r\n    const { state } = useContext(AppContext);\r\n    const { fullScreen, gui } = state.scene;\r\n    const { t } = useTranslation();\r\n    const [hovered, setHovered] = useState<boolean>(false);\r\n    const [vidPlayer] = useState(() => {\r\n        const vid = document.createElement('video');\r\n        vid.crossOrigin = 'Anonymous';\r\n        vid.loop = true;\r\n        vid.controls = true;\r\n        return vid;\r\n    });\r\n    const [vidObject] = useMemo(() => {\r\n        const geometry = medium === 'desktop' ? new PlaneGeometry(1.8, 0.8) : new PlaneGeometry(0.8, 1.8);\r\n        const uniforms = {\r\n            u_tex: { value: new VideoTexture(vidPlayer) },\r\n            u_adjust_uv: { value: new Vector2(1, 1) }\r\n        }\r\n        const material = new ShaderMaterial({\r\n            uniforms: uniforms,\r\n            vertexShader: videoVertexShader,\r\n            fragmentShader: videoFragmentShader,\r\n        });\r\n\r\n        const video = new Mesh(geometry, material);\r\n        return [video];\r\n    }, []);\r\n    const project = useRef(null);\r\n    const projectDescription = useRef(null);\r\n    const exit = useRef(null);\r\n    const timeline = gsap.timeline();\r\n    const [enteredPreviewMode, setEnteredPreviewMode] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        if (active || !fullScreen) document.body.style.cursor = hovered ? 'pointer' : 'auto';\r\n        if (!fullScreen) {\r\n            hovered ?\r\n                project.current && gsap.to(project.current.scale, { duration: 1, ease: 'expo.out', x: 1.1, y: 1.1 }) :\r\n                project.current && gsap.to(project.current.scale, { duration: 1, ease: 'expo.out', x: 1, y: 1 });\r\n        }\r\n    }, [hovered])\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            if (vidPlayer) {\r\n                if (vidPlayer.readyState < 3) {\r\n                    vidPlayer.src = `videos/${name}.mp4`;\r\n                    vidPlayer.load();\r\n                    vidPlayer.onerror = () => console.log(`${name} error ${vidPlayer.error.code}; details: ${vidPlayer.error.message}`);\r\n                }\r\n                vidPlayer.play();\r\n            }\r\n            if (medium === 'desktop') {\r\n                timeline.to(project.current.position, { x: 16, y: 0, z: -17.5 });\r\n                timeline.to(project.current.scale, { x: 2, y: 2, z: 2, duration: 1 });\r\n            } else {\r\n                timeline.to(project.current.position, { x: 16.5, y: 0, z: -17.5 });\r\n                timeline.to(project.current.scale, { x: 1.6, y: 1.6, z: 1.6, duration: 1 });\r\n            }\r\n            timeline.to(project.current.rotation, {\r\n                y: -0.2, duration: 1,\r\n            });\r\n            projectDescription.current.visible = true;\r\n            gsap.to(projectDescription.current.children[0].material, { opacity: 0.5, duration: 3 });\r\n        }\r\n        if (!active) {\r\n            if (vidPlayer) vidPlayer.pause();\r\n            timeline.to(project.current.position, { x: x, y: y, z: -18 })\r\n            timeline.to(project.current.rotation, { y: 0, duration: 1 });\r\n            timeline.to(project.current.scale, { x: 1, y: 1, z: 1, duration: 1 });\r\n            projectDescription.current.visible = false;\r\n            gsap.to(projectDescription.current.children[0].material, { opacity: 0, duration: 3 });\r\n        }\r\n    }, [active])\r\n\r\n    // useEffect(() => {\r\n    //     if (project.current) {\r\n    //         if (focus) {\r\n    //             gsap.to(project.current.position, { duration: 3, ease: 'expo.out', x: x, y: y - 0.1, z: -18 });\r\n    //             gsap.to(project.current.children[1].material, { duration: 3, ease: 'expo.out', opacity: 1, onComplete: () => project.current.children[0].visible = true });\r\n    //         } else {\r\n    //             gsap.to(project.current.position, { duration: 3, ease: 'expo.out', x: rand(x - 2, x + 2), y: rand(y - 2, y + 2), z: -18 });\r\n    //             gsap.to(project.current.children[1].material, { duration: 3, ease: 'expo.out', opacity: 0, onComplete: () => project.current.children[0].visible = false });\r\n    //         }\r\n    //     }\r\n    // }, [focus])\r\n\r\n    const rand = (a: number, b: number) => a + (b - a) * Math.random();\r\n\r\n    const preventAnimation = () => {\r\n        if (timeline.isActive()) timeline.clear();\r\n    }\r\n\r\n    const onSelected = (e: MouseEvent) => {\r\n        e.stopPropagation();\r\n        if (!fullScreen) {\r\n            preventAnimation();\r\n            setHovered(false);\r\n            onClick(id);\r\n        }\r\n    }\r\n\r\n    const onExit = () => {\r\n        preventAnimation();\r\n        setHovered(false);\r\n        onClick(null);\r\n    }\r\n\r\n    const onEnterPreviewMode = (e: MouseEvent) => {\r\n        e.stopPropagation();\r\n        if (active) {\r\n            preventAnimation();\r\n            if (medium === 'desktop')\r\n                timeline.to(project.current.position, { x: 15, y: 0, z: -16.5 });\r\n            else\r\n                timeline.to(project.current.position, { x: 15, y: 0, z: -17.1 });\r\n            timeline.to(project.current.rotation, {\r\n                y: 0,\r\n                duration: 1,\r\n                onComplete: () => setEnteredPreviewMode(true)\r\n            });\r\n            gsap.to(projectDescription.current.children[0].material, { opacity: 0, duration: 3 });\r\n            projectDescription.current.visible = false;\r\n        }\r\n    }\r\n\r\n    const onExitPreviewMode = (e: MouseEvent) => {\r\n        e.stopPropagation();\r\n        if (active) {\r\n            preventAnimation();\r\n            setEnteredPreviewMode(false);\r\n            if (medium === 'desktop')\r\n                timeline.to(project.current.position, { x: 16, y: 0, z: -17.5 });\r\n            else\r\n                timeline.to(project.current.position, { x: 16.5, y: 0, z: -17.5 });\r\n            timeline.to(project.current.rotation, { y: -0.2, duration: 1 });\r\n            gsap.to(projectDescription.current.children[0].material, { opacity: 0.5, duration: 3 });\r\n            projectDescription.current.visible = true;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <group\r\n                ref={project}\r\n                onClick={fullScreen ? (e) => onEnterPreviewMode(e) : (e) => onSelected(e)}\r\n                onPointerMissed={fullScreen ? (e) => onExitPreviewMode(e) : null}\r\n                onPointerOver={enteredPreviewMode ? () => setHovered(false) : () => setHovered(true)}\r\n                onPointerOut={enteredPreviewMode ? () => setHovered(true) : () => setHovered(false)}\r\n            >\r\n                <primitive\r\n                    // visible={false}\r\n                    object={vidObject}\r\n                    position-z={0.08}\r\n                />\r\n                <RoundedBox args={medium == 'desktop' ? [2, 1, 0.1] : [1, 2, 0.1]}>\r\n                    <meshPhongMaterial\r\n                        attach=\"material\"\r\n                        color=\"#000\"\r\n                    // opacity={0}\r\n                    // transparent={true}\r\n                    />\r\n                </RoundedBox>\r\n            </group>\r\n            <group\r\n                ref={projectDescription}\r\n                position={[14.3, 0, -16]}\r\n                visible={false}\r\n            >\r\n                <mesh>\r\n                    <planeBufferGeometry args={[1.5, 1.5]} />\r\n                    <meshStandardMaterial\r\n                        color='#000'\r\n                        transparent\r\n                    />\r\n                </mesh>\r\n                <group>\r\n                    <Text\r\n                        color='#d4af37'\r\n                        font='fonts/Oswald.ttf'\r\n                        fontSize={0.1}\r\n                        maxWidth={1.5}\r\n                        textAlign='center'\r\n                        anchorY={-0.7}\r\n                        layers={[1]}\r\n                    >\r\n                        {t(`projectTitles.${id}`)}\r\n                    </Text>\r\n                    <Text\r\n                        color='#fff'\r\n                        font='fonts/Oswald.ttf'\r\n                        fontSize={0.08}\r\n                        maxWidth={1}\r\n                        textAlign='center'\r\n                        anchorY={-0.5}\r\n                        lineHeight={2}\r\n                        layers={[1]}\r\n                    >\r\n                        {t(`projectDesc.${id}`)}\r\n                    </Text>\r\n                    <Text\r\n                        color='#fff'\r\n                        font='fonts/Oswald.ttf'\r\n                        fontSize={0.06}\r\n                        maxWidth={1}\r\n                        textAlign='center'\r\n                        anchorY={0.3}\r\n                        lineHeight={2}\r\n                        layers={[1]}\r\n                    >\r\n                        {preview}\r\n                    </Text>\r\n                </group>\r\n                {logos.map((logo: string, index: number) => {\r\n                    const texture = new TextureLoader().load(`images/logos/${logo}.png`);\r\n\r\n                    return (\r\n                        <Fragment key={index}>\r\n                            <mesh\r\n                                position-x={0.5 * (index % 3) - 0.5}\r\n                                position-y={index < 3 ? -0.5 : -0.7}\r\n                            >\r\n                                <planeBufferGeometry args={[0.2, 0.1]} />\r\n                                <meshStandardMaterial map={texture} transparent />\r\n                            </mesh>\r\n                        </Fragment>\r\n                    )\r\n                })}\r\n            </group>\r\n            {\r\n                fullScreen &&\r\n                <Text\r\n                    ref={exit}\r\n                    position={[16.8, -1, -16.5]}\r\n                    color='#d4af37'\r\n                    font='fonts/Oswald.ttf'\r\n                    fontSize={0.2}\r\n                    onClick={() => onExit()}\r\n                    layers={[1]}\r\n                >\r\n                    {t('exit')}\r\n                </Text>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Project;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Globe.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Texts.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Photo.tsx",["136"],"import { useEffect, useMemo, useRef } from 'react';\r\nimport { useLoader } from '@react-three/fiber'\r\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\r\nimport gsap from 'gsap';\r\nimport photoVertexShader from '../shaders/photoVertex.glsl';\r\nimport photoFragmentShader from '../shaders/photoFragment.glsl';\r\nimport { DoubleSide } from 'three';\r\n\r\nconst Photo = ({ focus }: { focus: boolean }): JSX.Element => {\r\n    const photo = useRef(null);\r\n    const row: number = 3;\r\n    const col: number = 4;\r\n    // const particlesNum: number = row * col;\r\n    const photoTexture = useLoader(TextureLoader, 'images/photo.png');\r\n    const maskTexture = useLoader(TextureLoader, 'images/mask.png');\r\n\r\n    const rand = (a: number, b: number) => a + (b - a) * Math.random();\r\n\r\n    const [positions, coordinates, speeds, offset] = useMemo(() => {\r\n        const initialPositions: Array<number> = [];\r\n        const initialCoordinates: Array<number> = [];\r\n        const initialSpeeds: Array<number> = [];\r\n        const initialOffset: Array<number> = [];\r\n\r\n        for (let y = 0; y < row; y += 0.01) {\r\n            let posY: number = y - row / 2;\r\n            for (let x = 0; x < col; x += 0.01) {\r\n                let posX: number = x - col / 2;\r\n                initialPositions.push(posY * 2);\r\n                initialPositions.push(posX * 2);\r\n                initialPositions.push(0);\r\n                initialCoordinates.push(y);\r\n                initialCoordinates.push(x);\r\n                initialCoordinates.push(0);\r\n                initialSpeeds.push(rand(0.4, 1));\r\n                initialOffset.push(rand(0, 5));\r\n            }\r\n        }\r\n\r\n        const positions: Float32Array = new Float32Array(initialPositions);\r\n        const coordinates: Float32Array = new Float32Array(initialCoordinates);\r\n        const speeds: Float32Array = new Float32Array(initialSpeeds);\r\n        const offset: Float32Array = new Float32Array(initialOffset);\r\n        return [positions, coordinates, speeds, offset];\r\n    }, [])\r\n\r\n    const uniforms = useMemo(() => ({\r\n        progress: { value: 0 },\r\n        photo: { value: photoTexture },\r\n        mask: { value: maskTexture },\r\n        move: { value: 5 },\r\n        time: { value: 0 }\r\n    }), [])\r\n\r\n    useEffect(() => {\r\n        focus ?\r\n            photo.current && gsap.to(photo.current.material.uniforms.move, { value: 0, duration: 5, ease: 'expo.out', }) :\r\n            photo.current && gsap.to(photo.current.material.uniforms.move, { value: 5, duration: 5, ease: 'expo.out', onUpdate: () => photo.current.geometry.verticesNeedUpdate = true, });\r\n    }, [focus])\r\n\r\n    return (\r\n        <points\r\n            ref={photo}\r\n        >\r\n            <bufferGeometry>\r\n                <bufferAttribute\r\n                    attachObject={[\"attributes\", \"position\"]}\r\n                    count={positions.length / 3}\r\n                    array={positions}\r\n                    itemSize={3}\r\n                />\r\n                <bufferAttribute\r\n                    attachObject={[\"attributes\", \"aCoordinates\"]}\r\n                    count={coordinates.length / 3}\r\n                    array={coordinates}\r\n                    itemSize={3}\r\n                />\r\n                <bufferAttribute\r\n                    attachObject={[\"attributes\", \"aSpeed\"]}\r\n                    count={speeds.length}\r\n                    array={speeds}\r\n                    itemSize={1}\r\n                />\r\n                <bufferAttribute\r\n                    attachObject={[\"attributes\", \"aOffset\"]}\r\n                    count={offset.length}\r\n                    array={offset}\r\n                    itemSize={1}\r\n                />\r\n            </bufferGeometry>\r\n            <shaderMaterial\r\n                vertexShader={photoVertexShader}\r\n                fragmentShader={photoFragmentShader}\r\n                uniforms={uniforms}\r\n                side={DoubleSide}\r\n                transparent={true}\r\n            // depthTest={false}\r\n            // depthWrite={false}\r\n            />\r\n        </points>\r\n    )\r\n}\r\n\r\nexport default Photo;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\home\\Objects.tsx",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":27},{"ruleId":"141","severity":1,"message":"145","line":1,"column":40,"nodeType":"143","messageId":"144","endLine":1,"endColumn":46},{"ruleId":"141","severity":1,"message":"146","line":7,"column":33,"nodeType":"143","messageId":"144","endLine":7,"endColumn":45},{"ruleId":"141","severity":1,"message":"147","line":7,"column":47,"nodeType":"143","messageId":"144","endLine":7,"endColumn":54},{"ruleId":"141","severity":1,"message":"148","line":8,"column":10,"nodeType":"143","messageId":"144","endLine":8,"endColumn":15},{"ruleId":"141","severity":1,"message":"149","line":9,"column":18,"nodeType":"143","messageId":"144","endLine":9,"endColumn":26},{"ruleId":"141","severity":1,"message":"150","line":9,"column":28,"nodeType":"143","messageId":"144","endLine":9,"endColumn":36},{"ruleId":"141","severity":1,"message":"151","line":10,"column":10,"nodeType":"143","messageId":"144","endLine":10,"endColumn":20},{"ruleId":"141","severity":1,"message":"152","line":10,"column":22,"nodeType":"143","messageId":"144","endLine":10,"endColumn":41},{"ruleId":"153","severity":1,"message":"154","line":55,"column":6,"nodeType":"155","endLine":55,"endColumn":18,"suggestions":"156"},{"ruleId":"141","severity":1,"message":"157","line":7,"column":10,"nodeType":"143","messageId":"144","endLine":7,"endColumn":23},{"ruleId":"141","severity":1,"message":"149","line":9,"column":10,"nodeType":"143","messageId":"144","endLine":9,"endColumn":18},{"ruleId":"153","severity":1,"message":"158","line":19,"column":8,"nodeType":"155","endLine":19,"endColumn":10,"suggestions":"159"},{"ruleId":"153","severity":1,"message":"160","line":53,"column":8,"nodeType":"155","endLine":53,"endColumn":10,"suggestions":"161"},{"ruleId":"141","severity":1,"message":"149","line":5,"column":10,"nodeType":"143","messageId":"144","endLine":5,"endColumn":18},{"ruleId":"141","severity":1,"message":"162","line":6,"column":10,"nodeType":"143","messageId":"144","endLine":6,"endColumn":27},{"ruleId":"141","severity":1,"message":"147","line":7,"column":10,"nodeType":"143","messageId":"144","endLine":7,"endColumn":17},{"ruleId":"153","severity":1,"message":"163","line":38,"column":8,"nodeType":"155","endLine":38,"endColumn":21,"suggestions":"164"},{"ruleId":"153","severity":1,"message":"165","line":59,"column":8,"nodeType":"155","endLine":59,"endColumn":22,"suggestions":"166"},{"ruleId":"141","severity":1,"message":"167","line":1,"column":58,"nodeType":"143","messageId":"144","endLine":1,"endColumn":66},{"ruleId":"141","severity":1,"message":"168","line":10,"column":10,"nodeType":"143","messageId":"144","endLine":10,"endColumn":22},{"ruleId":"141","severity":1,"message":"150","line":12,"column":10,"nodeType":"143","messageId":"144","endLine":12,"endColumn":18},{"ruleId":"141","severity":1,"message":"169","line":13,"column":10,"nodeType":"143","messageId":"144","endLine":13,"endColumn":21},{"ruleId":"141","severity":1,"message":"170","line":17,"column":25,"nodeType":"143","messageId":"144","endLine":17,"endColumn":28},{"ruleId":"153","severity":1,"message":"171","line":41,"column":8,"nodeType":"155","endLine":41,"endColumn":10,"suggestions":"172"},{"ruleId":"153","severity":1,"message":"173","line":55,"column":8,"nodeType":"155","endLine":55,"endColumn":17,"suggestions":"174"},{"ruleId":"153","severity":1,"message":"175","line":88,"column":8,"nodeType":"155","endLine":88,"endColumn":16,"suggestions":"176"},{"ruleId":"141","severity":1,"message":"177","line":102,"column":11,"nodeType":"143","messageId":"144","endLine":102,"endColumn":15},{"ruleId":"178","severity":1,"message":"179","line":170,"column":42,"nodeType":"180","messageId":"181","endLine":170,"endColumn":44},{"ruleId":"153","severity":1,"message":"182","line":53,"column":9,"nodeType":"155","endLine":53,"endColumn":11,"suggestions":"183"},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'Intersection' is defined but never used.","'Vector2' is defined but never used.","'Types' is defined but never used.","'useFrame' is defined but never used.","'useThree' is defined but never used.","'FullScreen' is defined but never used.","'useFullScreenHandle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'adjustCanvasSize'. Either include it or remove the dependency array.","ArrayExpression",["186"],"'OrbitControls' is defined but never used.","React Hook useEffect has a missing dependency: 'updateMousePosition'. Either include it or remove the dependency array.",["187"],"React Hook useMemo has missing dependencies: 'camera', 'gl', and 'scene'. Either include them or remove the dependency array.",["188"],"'PerspectiveCamera' is defined but never used.","React Hook useEffect has missing dependencies: 'camera' and 'onNavigationEnded'. Either include them or remove the dependency array.",["189"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["190"],"'Suspense' is defined but never used.","'PointerEvent' is defined but never used.","'Interaction' is defined but never used.","'gui' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'medium' and 'vidPlayer'. Either include them or remove the dependency array.",["191"],"React Hook useEffect has missing dependencies: 'active' and 'fullScreen'. Either include them or remove the dependency array.",["192"],"React Hook useEffect has missing dependencies: 'medium', 'name', 'timeline', 'vidPlayer', 'x', and 'y'. Either include them or remove the dependency array.",["193"],"'rand' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useMemo has missing dependencies: 'maskTexture' and 'photoTexture'. Either include them or remove the dependency array.",["194"],"no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [gl, camera, adjustCanvasSize]",{"range":"213","text":"214"},"Update the dependencies array to be: [updateMousePosition]",{"range":"215","text":"216"},"Update the dependencies array to be: [camera, gl, scene]",{"range":"217","text":"218"},"Update the dependencies array to be: [camera, currentItem, onNavigationEnded]",{"range":"219","text":"220"},"Update the dependencies array to be: [dispatch, projectItems]",{"range":"221","text":"222"},"Update the dependencies array to be: [medium, vidPlayer]",{"range":"223","text":"224"},"Update the dependencies array to be: [active, fullScreen, hovered]",{"range":"225","text":"226"},"Update the dependencies array to be: [active, medium, name, timeline, vidPlayer, x, y]",{"range":"227","text":"228"},"Update the dependencies array to be: [maskTexture, photoTexture]",{"range":"229","text":"230"},[2110,2122],"[gl, camera, adjustCanvasSize]",[690,692],"[updateMousePosition]",[1966,1968],"[camera, gl, scene]",[1643,1656],"[camera, currentItem, onNavigationEnded]",[3020,3034],"[dispatch, projectItems]",[1854,1856],"[medium, vidPlayer]",[2519,2528],"[active, fullScreen, hovered]",[4149,4157],"[active, medium, name, timeline, vidPlayer, x, y]",[2248,2250],"[maskTexture, photoTexture]"]
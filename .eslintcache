[{"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\index.tsx":"1","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\reportWebVitals.ts":"2","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\App.tsx":"3","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Navbar.tsx":"4","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Home.tsx":"5","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\useThree.tsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":481,"mtime":1609983779934,"results":"10","hashOfConfig":"8"},{"size":1556,"mtime":1609960774218,"results":"11","hashOfConfig":"8"},{"size":1752,"mtime":1609961257990,"results":"12","hashOfConfig":"8"},{"size":1749,"mtime":1609984885962,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"g7aof9",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\index.tsx",[],["29","30"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\reportWebVitals.ts",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\App.tsx",["31","32","33"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Navbar.tsx",["34"],"import React from 'react';\r\nimport \"./styles/navbar.css\";\r\nimport { NavbarItem } from \"./App\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst icon = {\r\n    hidden: {\r\n        opacity: 0,\r\n        pathLength: 0,\r\n        fill: \"rgba(255,77,23,0)\"\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        pathLength: 1,\r\n        fill: \"rgba(255,77,23,0)\"\r\n    }\r\n};\r\n\r\ninterface NavProps {\r\n    items: Array<NavbarItem>\r\n}\r\n\r\nconst Navbar: React.FC<NavProps> = ({ items }) => {\r\n    return (\r\n        <div className=\"navbar-container\">\r\n            <div className=\"logo-container\">\r\n                <motion.svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 200 100\"\r\n                    className=\"logo\"\r\n                >\r\n                    <motion.path\r\n                        d=\"M 50 100 L 50 0 L 100 50 L 150 0 L 150 100\"\r\n                        variants={icon}\r\n                        initial=\"hidden\"\r\n                        animate=\"visible\"\r\n                        transition={{\r\n                            default: { duration: 2, ease: \"easeInOut\" },\r\n                            fill: { duration: 2, ease: [1, 0, 0.8, 1] }\r\n                        }}\r\n                    />\r\n                </motion.svg>\r\n                <p className=\"full-name\">KAMIL MROCZEK</p>\r\n            </div>\r\n\r\n            <ul>\r\n                {\r\n                    items.map((item: NavbarItem) => <li><a>{item.name}</a></li>)\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;",["35","36"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Home.tsx",["37"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\useThree.tsx",["38","39","40","41","42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":3,"column":8,"nodeType":"49","messageId":"50","endLine":3,"endColumn":14},{"ruleId":"47","severity":1,"message":"51","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":12},{"ruleId":"47","severity":1,"message":"52","line":7,"column":7,"nodeType":"49","messageId":"50","endLine":7,"endColumn":38},{"ruleId":"53","severity":1,"message":"54","line":48,"column":57,"nodeType":"55","endLine":48,"endColumn":60},{"ruleId":"43","replacedBy":"56"},{"ruleId":"45","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":10,"column":13,"nodeType":"55","endLine":10,"endColumn":83},{"ruleId":"47","severity":1,"message":"60","line":6,"column":19,"nodeType":"49","messageId":"50","endLine":6,"endColumn":27},{"ruleId":"47","severity":1,"message":"61","line":7,"column":20,"nodeType":"49","messageId":"50","endLine":7,"endColumn":29},{"ruleId":"47","severity":1,"message":"62","line":8,"column":22,"nodeType":"49","messageId":"50","endLine":8,"endColumn":33},{"ruleId":"47","severity":1,"message":"63","line":9,"column":18,"nodeType":"49","messageId":"50","endLine":9,"endColumn":25},{"ruleId":"64","severity":1,"message":"65","line":44,"column":8,"nodeType":"66","endLine":44,"endColumn":10,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'navbar_items' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["68"],["69"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'setScene' is assigned a value but never used.","'setCamera' is assigned a value but never used.","'setRenderer' is assigned a value but never used.","'setAxes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'camera', 'init', and 'renderer'. Either include them or remove the dependency array.","ArrayExpression",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [camera, init, renderer]",{"range":"73","text":"74"},[1720,1722],"[camera, init, renderer]"]
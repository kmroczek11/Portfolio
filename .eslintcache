[{"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\index.tsx":"1","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\reportWebVitals.ts":"2","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\App.tsx":"3","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Navbar.tsx":"4","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Home.tsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":476,"mtime":1609960793484,"results":"9","hashOfConfig":"7"},{"size":1556,"mtime":1609960774218,"results":"10","hashOfConfig":"7"},{"size":1752,"mtime":1609961257990,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"g7aof9",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\index.tsx",[],["24","25"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\reportWebVitals.ts",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\App.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Navbar.tsx",["26"],"import React from 'react';\r\nimport \"./styles/navbar.css\";\r\nimport { NavbarItem } from \"./App\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst icon = {\r\n    hidden: {\r\n        opacity: 0,\r\n        pathLength: 0,\r\n        fill: \"rgba(255,77,23,0)\"\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        pathLength: 1,\r\n        fill: \"rgba(255,77,23,0)\"\r\n    }\r\n};\r\n\r\ninterface NavProps {\r\n    items: Array<NavbarItem>\r\n}\r\n\r\nconst Navbar: React.FC<NavProps> = ({ items }) => {\r\n    return (\r\n        <div className=\"navbar-container\">\r\n            <div className=\"logo-container\">\r\n                <motion.svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 200 100\"\r\n                    className=\"logo\"\r\n                >\r\n                    <motion.path\r\n                        d=\"M 50 100 L 50 0 L 100 50 L 150 0 L 150 100\"\r\n                        variants={icon}\r\n                        initial=\"hidden\"\r\n                        animate=\"visible\"\r\n                        transition={{\r\n                            default: { duration: 2, ease: \"easeInOut\" },\r\n                            fill: { duration: 2, ease: [1, 0, 0.8, 1] }\r\n                        }}\r\n                    />\r\n                </motion.svg>\r\n                <p className=\"full-name\">KAMIL MROCZEK</p>\r\n            </div>\r\n\r\n            <ul>\r\n                {\r\n                    items.map((item: NavbarItem) => <li><a>{item.name}</a></li>)\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Home.tsx",["27"],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":48,"column":57,"nodeType":"34","endLine":48,"endColumn":60},{"ruleId":"35","severity":1,"message":"36","line":10,"column":13,"nodeType":"34","endLine":10,"endColumn":83},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]
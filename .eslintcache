[{"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\index.tsx":"1","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\reportWebVitals.ts":"2","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\App.tsx":"3","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Navbar.tsx":"4","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Home.tsx":"5","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\functions.tsx":"6","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Scene.tsx":"7","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Education.tsx":"8","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Projects.tsx":"9","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\index.tsx":"10","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\reducers.tsx":"11","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Contact.tsx":"12","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\i18n.ts":"13"},{"size":1173,"mtime":1615244637424,"results":"14","hashOfConfig":"15"},{"size":440,"mtime":1614182950498,"results":"16","hashOfConfig":"15"},{"size":1723,"mtime":1615658326884,"results":"17","hashOfConfig":"15"},{"size":1977,"mtime":1615498432032,"results":"18","hashOfConfig":"15"},{"size":3851,"mtime":1615660609076,"results":"19","hashOfConfig":"15"},{"size":1065,"mtime":1614370367902,"results":"20","hashOfConfig":"15"},{"size":3657,"mtime":1615422929843,"results":"21","hashOfConfig":"15"},{"size":2146,"mtime":1615660044144,"results":"22","hashOfConfig":"15"},{"size":8234,"mtime":1615659930762,"results":"23","hashOfConfig":"15"},{"size":1015,"mtime":1614808489559,"results":"24","hashOfConfig":"15"},{"size":1066,"mtime":1614808516602,"results":"25","hashOfConfig":"15"},{"size":3237,"mtime":1615422867525,"results":"26","hashOfConfig":"15"},{"size":837,"mtime":1615245228365,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"g7aof9",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\index.tsx",[],["58","59"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\reportWebVitals.ts",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\App.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Navbar.tsx",["60"],"import React, { useContext, useState } from 'react';\r\nimport './styles/navbar.css';\r\nimport { NavbarItem } from './App';\r\nimport { AppContext } from './context';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface NavProps {\r\n    items: Array<NavbarItem>\r\n}\r\n\r\ninterface LanguageItem {\r\n    name: string,\r\n    src: string,\r\n}\r\n\r\nconst Navbar = ({ items }: NavProps): JSX.Element => {\r\n    console.log('navbar rendered');\r\n    const { state } = useContext(AppContext);\r\n    const [languages] = useState<Array<LanguageItem>>([\r\n        { name: 'pl', src: 'images/flags/poland.png' },\r\n        { name: 'en', src: 'images/flags/england.png' }\r\n    ]);\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const onClick = (language: string) => i18n.changeLanguage(language);\r\n\r\n    return !state.scene.fullScreen ? (\r\n        <div className='navbar-container'>\r\n            <div className=\"logo-container\">\r\n                <svg\r\n                    className=\"logo\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 200 100\"\r\n                    fill=\"rgba(255, 255, 255, 0)\"\r\n                >\r\n                    <path d=\"M 50 100 L 50 0 L 100 50 L 150 0 L 150 100\" />\r\n                </svg>\r\n                <Link className='full-name' to={'/'}>KAMIL MROCZEK</ Link>\r\n            </div>\r\n            <ul>\r\n                {\r\n                    items.map((item: NavbarItem, index: number) =>\r\n                        <li key={index}>\r\n                            <Link to={item.link}>{t(`navItems.${index}`)}</Link>\r\n                        </li>\r\n                    )\r\n                }\r\n                {\r\n                    languages.map((language: LanguageItem, index: number) =>\r\n                        <img key={index} src={language.src} onClick={() => onClick(language.name)} />)\r\n                }\r\n            </ul>\r\n        </div>\r\n    ) : null;\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Home.tsx",["61"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\functions.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Scene.tsx",["62","63","64","65"],"import React, { Suspense, useContext, useState, useEffect } from 'react';\r\nimport Home from './Home';\r\nimport { useFrame } from 'react-three-fiber'\r\nimport { AppContext } from './context';\r\nimport { moveObject } from './functions';\r\nimport { Vector3 } from 'three/src/math/Vector3';\r\nimport Education from './Education';\r\nimport Projects from './Projects';\r\nimport Contact from './Contact';\r\nimport { OrbitControls, Text, useProgress } from '@react-three/drei';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { TextureLoader, BackSide } from 'three';\r\n\r\ninterface LoaderProps {\r\n    position?: [x: number, y: number, z: number]\r\n}\r\n\r\nconst Loader = ({ position }: LoaderProps): JSX.Element => {\r\n    const { progress } = useProgress();\r\n    const { t, i18n } = useTranslation();\r\n    console.log(progress);\r\n\r\n    return <Text\r\n        position={position}\r\n        color='#ff4d17'\r\n        font='fonts/Oswald.ttf'\r\n        fontSize={0.5}\r\n        textAlign='center'\r\n    >\r\n        {t('loadingMessage', { progress: progress })}\r\n    </Text>\r\n}\r\n\r\nconst Skybox = React.memo(() => {\r\n    console.log('skybox rendered');\r\n    const textures: Array<string> = [\r\n        'images/textures/skybox/space_ft.png',\r\n        'images/textures/skybox/space_bk.png',\r\n        'images/textures/skybox/space_up.png',\r\n        'images/textures/skybox/space_dn.png',\r\n        'images/textures/skybox/space_rt.png',\r\n        'images/textures/skybox/space_lf.png'\r\n    ];\r\n\r\n    return <mesh>\r\n        <boxBufferGeometry args={[1000, 1000, 1000]} />\r\n        {\r\n            textures.map((value: string, i: number) => {\r\n                const texture = new TextureLoader().load(value);\r\n                console.log(texture);\r\n                return <meshBasicMaterial key={i} attachArray='material' map={texture} side={BackSide} />;\r\n            })\r\n        }\r\n    </mesh>\r\n})\r\n\r\nconst Scene = (): JSX.Element => {\r\n    console.log('scene rendered');\r\n    const { state } = useContext(AppContext);\r\n    const { camera } = state.scene;\r\n    const [currentItem, setCurrentItem] = useState<string>('');\r\n\r\n    const unlisten = window.appHistory.listen((location: any) => {\r\n        setCurrentItem(location.pathname.split('/')[1]);\r\n    })\r\n\r\n    useFrame(() => {\r\n        switch (currentItem) {\r\n            case '':\r\n                camera && moveObject(camera, camera.position, new Vector3(0, 0, 5), 0.01);\r\n                break;\r\n            case 'education':\r\n                camera && moveObject(camera, camera.position, new Vector3(0, 0, -10), 0.01);\r\n                break;\r\n            case 'projects':\r\n                camera && moveObject(camera, camera.position, new Vector3(10, 0, -10), 0.01);\r\n                break;\r\n            case 'contact':\r\n                camera && moveObject(camera, camera.position, new Vector3(10, 0, 5), 0.01);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={<Loader />}>\r\n                <Home />\r\n            </Suspense>\r\n            <Suspense fallback={<Loader position={[0, 0, -13]} />}>\r\n                <Education />\r\n            </Suspense>\r\n            <Suspense fallback={<Loader position={[10, 0, -13]} />}>\r\n                <Projects />\r\n            </Suspense>\r\n            <Contact />\r\n            <directionalLight position={[0, 1, 1]} intensity={1} color={'#fff'} />\r\n            <ambientLight color={'#404040'} />\r\n            <Suspense fallback={null}>\r\n                <Skybox />\r\n            </Suspense>\r\n            {/* <OrbitControls listenToKeyEvents /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Scene;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Education.tsx",["66","67","68"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Projects.tsx",["69","70","71"],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\index.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\context\\reducers.tsx",[],"C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\Contact.tsx",["72"],"import React from 'react';\r\nimport './styles/contact.css';\r\nimport { Html } from '@react-three/drei';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst ContactForm = (): JSX.Element => {\r\n    const { t, i18n } = useTranslation();\r\n\r\n    return (\r\n        <Html position={[10, 0, 0]} center>\r\n            <Formik\r\n                initialValues={{ name: '', email: '', phone: '', link: '', message: '' }}\r\n                validate={values => {\r\n                    const errors = { name: '', email: '', phone: '', link: '', message: '' };\r\n                    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) errors.email = t('contact.6');\r\n                    if (!values.name) errors.name = t('contact.7');\r\n                    if (!values.email) errors.email = t('contact.7');\r\n                    return errors;\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    setTimeout(() => {\r\n                        alert(JSON.stringify(values, null, 2));\r\n                        setSubmitting(false);\r\n                    }, 400);\r\n                }}\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form className='contact-form'>\r\n                        <div className='name'>\r\n                            <span className='material-icons'>person</span>\r\n                            <Field type='text' name='name' placeholder={t('contact.0')} />\r\n                            <ErrorMessage className='error' name='name' component='span' />\r\n                        </div>\r\n                        <div className='email'>\r\n                            <span className='material-icons'>email</span>\r\n                            <Field type='email' name='email' placeholder={t('contact.1')} />\r\n                            <ErrorMessage className='error' name='email' component='span' />\r\n                        </div>\r\n                        <div className='phone'>\r\n                            <span className='material-icons'>phone</span>\r\n                            <Field type='tel' name='phone' placeholder={t('contact.2')} />\r\n                            <ErrorMessage className='error' name='phone' component='span' />\r\n                        </div>\r\n                        <div className='link'>\r\n                            <span className='material-icons'>link</span>\r\n                            <Field type='url' name='link' placeholder={t('contact.3')} />\r\n                        </div>\r\n                        <div className='message'>\r\n                            <span className='material-icons'>message</span>\r\n                            <Field type='text' name='message' placeholder={t('contact.4')} as='textarea' />\r\n                        </div>\r\n                        <div className='break' />\r\n                        <button type='submit' disabled={isSubmitting}>{t('contact.5')}</button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </Html>\r\n    )\r\n}\r\n\r\nconst Contact = (): JSX.Element => {\r\n    console.log('contact rendered');\r\n\r\n    return (\r\n        <ContactForm />\r\n    )\r\n}\r\n\r\nexport default Contact;","C:\\Users\\Kamil\\Desktop\\Portfolio\\portfolio\\src\\i18n.ts",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":51,"column":25,"nodeType":"79","endLine":51,"endColumn":102},{"ruleId":"80","severity":1,"message":"81","line":12,"column":16,"nodeType":"82","messageId":"83","endLine":12,"endColumn":20},{"ruleId":"80","severity":1,"message":"84","line":1,"column":49,"nodeType":"82","messageId":"83","endLine":1,"endColumn":58},{"ruleId":"80","severity":1,"message":"85","line":10,"column":10,"nodeType":"82","messageId":"83","endLine":10,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":20,"column":16,"nodeType":"82","messageId":"83","endLine":20,"endColumn":20},{"ruleId":"80","severity":1,"message":"86","line":63,"column":11,"nodeType":"82","messageId":"83","endLine":63,"endColumn":19},{"ruleId":"80","severity":1,"message":"87","line":5,"column":10,"nodeType":"82","messageId":"83","endLine":5,"endColumn":23},{"ruleId":"80","severity":1,"message":"88","line":54,"column":30,"nodeType":"82","messageId":"83","endLine":54,"endColumn":49},{"ruleId":"80","severity":1,"message":"81","line":61,"column":16,"nodeType":"82","messageId":"83","endLine":61,"endColumn":20},{"ruleId":"80","severity":1,"message":"81","line":162,"column":16,"nodeType":"82","messageId":"83","endLine":162,"endColumn":20},{"ruleId":"80","severity":1,"message":"86","line":164,"column":11,"nodeType":"82","messageId":"83","endLine":164,"endColumn":19},{"ruleId":"89","severity":1,"message":"90","line":183,"column":8,"nodeType":"91","endLine":183,"endColumn":22,"suggestions":"92"},{"ruleId":"80","severity":1,"message":"81","line":8,"column":16,"nodeType":"82","messageId":"83","endLine":8,"endColumn":20},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'i18n' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'OrbitControls' is defined but never used.","'unlisten' is assigned a value but never used.","'TextureLoader' is defined but never used.","'setInstitutionItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [dispatch, projectItems]",{"range":"98","text":"99"},[7750,7764],"[dispatch, projectItems]"]